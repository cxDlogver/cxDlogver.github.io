<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>2024-08-02学习总结</title>
    <link href="/2024/08/02/2024-08-02/"/>
    <url>/2024/08/02/2024-08-02/</url>
    
    <content type="html"><![CDATA[<p>本文记录了一些前端学习的知识点</p><span id="more"></span><h1 id="前端学习记录"><a href="#前端学习记录" class="headerlink" title="前端学习记录"></a>前端学习记录</h1><h2 id="CSS常见属性的继承性"><a href="#CSS常见属性的继承性" class="headerlink" title="CSS常见属性的继承性"></a>CSS常见属性的继承性</h2><h3 id="可继承属性"><a href="#可继承属性" class="headerlink" title="可继承属性"></a>可继承属性</h3><p>这些属性的值会自动从父元素继承到子元素，除非显式地为子元素设置了其他值。</p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td><code>color</code></td><td>文本的颜色。</td></tr><tr><td><code>font-family</code></td><td>字体系列。</td></tr><tr><td><code>font-size</code></td><td>字体大小。</td></tr><tr><td><code>font-style</code></td><td>字体样式（如斜体）。</td></tr><tr><td><code>font-weight</code></td><td>字体粗细。</td></tr><tr><td><code>line-height</code></td><td>行高。</td></tr><tr><td><code>text-align</code></td><td>文本对齐方式。</td></tr><tr><td><code>text-indent</code></td><td>文本缩进。</td></tr><tr><td><code>text-transform</code></td><td>文本转换（如大写、小写）。</td></tr><tr><td><code>letter-spacing</code></td><td>字符间距。</td></tr><tr><td><code>word-spacing</code></td><td>单词间距。</td></tr><tr><td><code>text-shadow</code></td><td>文本阴影。</td></tr><tr><td><code>white-space</code></td><td>空白符处理。</td></tr><tr><td><code>visibility</code></td><td>元素可见性。</td></tr><tr><td><code>list-style</code></td><td>列表样式。</td></tr><tr><td><code>border-collapse</code></td><td>边框折叠方式（在表格中）。</td></tr><tr><td><code>border-spacing</code></td><td>边框间距（在表格中）。</td></tr></tbody></table><h3 id="不可继承属性"><a href="#不可继承属性" class="headerlink" title="不可继承属性"></a>不可继承属性</h3><p>这些属性不会自动从父元素继承到子元素，每个元素需要单独设置这些属性的值。</p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td><code>background</code></td><td>背景颜色、背景图片等。</td></tr><tr><td><code>border</code></td><td>边框的宽度、样式和颜色。</td></tr><tr><td><code>margin</code></td><td>外边距。</td></tr><tr><td><code>padding</code></td><td>内边距。</td></tr><tr><td><font color="#FFFF00"><code>width</code></font></td><td>元素的宽度。</td></tr><tr><td><font color="yellow"><code>height</code></font></td><td>元素的高度。</td></tr><tr><td><code>position</code></td><td>元素的定位方式。</td></tr><tr><td><code>display</code></td><td>元素的显示类型（如块级、行内、隐藏等）。</td></tr><tr><td><code>overflow</code></td><td>内容溢出处理方式。</td></tr><tr><td><code>z-index</code></td><td>元素的堆叠顺序。</td></tr><tr><td><code>box-shadow</code></td><td>盒子阴影。</td></tr><tr><td><code>opacity</code></td><td>元素的不透明度。</td></tr><tr><td><code>float</code></td><td>元素的浮动方式。</td></tr><tr><td><code>clear</code></td><td>清除浮动。</td></tr><tr><td><code>flex</code></td><td>Flexbox 布局属性。</td></tr><tr><td><code>grid</code></td><td>Grid 布局属性。</td></tr><tr><td><code>transform</code></td><td>元素的变换（如旋转、缩放）。</td></tr><tr><td><code>transition</code></td><td>过渡效果。</td></tr><tr><td><code>animation</code></td><td>动画效果。</td></tr></tbody></table><h3 id="继承机制的管理"><a href="#继承机制的管理" class="headerlink" title="继承机制的管理"></a>继承机制的管理</h3><p>对于不可继承的属性，可以使用 <code>inherit</code>, <code>initial</code>, <code>unset</code> 和 <code>revert</code> 值来管理继承行为：</p><ul><li>**<code>inherit</code>**：强制子元素继承父元素的属性值。</li><li>**<code>initial</code>**：将属性值设置为其初始值。</li><li>**<code>unset</code>**：将属性值设置为其继承值或初始值，取决于属性是否继承。</li><li>**<code>revert</code>**：将属性值恢复为由用户代理（浏览器）默认样式表所定义的值。</li></ul><p><font color="#FFFF00">容器设置百分比相对长宽时，由于<code>width</code>和<code>height</code>不会继承，需要保证父容器设置了长宽。</font></p><h2 id="CSS选择器的优先级"><a href="#CSS选择器的优先级" class="headerlink" title="CSS选择器的优先级"></a>CSS选择器的优先级</h2><p><font color="#FFFF00"> 简单描述：<code>!important</code>&gt;行内样式&gt;ID选择器&gt;类选择器&gt;元素选择器&gt;通用选择器(*)&gt;继承样式</font></p><p>详细描述：计算权重。每个选择器，都可计算出一组权重，格式为： (a,b,c)，权重相同则后来者居上。</p><ul><li>a：ID选择器和个数。</li><li>b：类、伪类、属性选择器的个数。</li><li>c：元素、伪元素选择器的个数。</li></ul><blockquote><p><a href="https://www.bilibili.com/video/BV1p84y1P7Z5/?p=86">https://www.bilibili.com/video/BV1p84y1P7Z5/?p=86</a></p><p>《CSS2笔记》 P15</p></blockquote><h2 id="媒体查询和响应式布局"><a href="#媒体查询和响应式布局" class="headerlink" title="媒体查询和响应式布局"></a>媒体查询和响应式布局</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-keyword">@media</span> &#123;媒体类型 / 媒体特性&#125; <span class="hljs-selector-attr">[ &#123;运算符&#125; &#123;媒体类型 / 媒体特性&#125;  ]</span>&#123;<br>    CSS样式<br>&#125; <br><br><span class="hljs-keyword">@media</span> screen <span class="hljs-keyword">and</span> (<span class="hljs-attribute">max-width</span>: <span class="hljs-number">1000px</span>) &#123; <span class="hljs-comment">/* 当媒体为屏幕且视口宽度小于等于1000px时，采用下面的样式 */</span><br>    <span class="hljs-selector-class">.el-aside</span> &#123;<br>        <span class="hljs-attribute">position</span>: fixed;<br>        <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>        <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>        <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;<br>        <span class="hljs-attribute">z-index</span>: <span class="hljs-number">1000</span>;<br><br>        &amp;<span class="hljs-selector-class">.hide-aside</span> &#123;<br>            <span class="hljs-attribute">left</span>: -<span class="hljs-number">250px</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="媒体类型"><a href="#媒体类型" class="headerlink" title="媒体类型"></a>媒体类型</h3><table><thead><tr><th>值</th><th>含义</th></tr></thead><tbody><tr><td>all</td><td>检测所有设备</td></tr><tr><td>screen</td><td>检查电子屏幕</td></tr><tr><td>print</td><td>监测打印机</td></tr></tbody></table><h3 id="媒体特性"><a href="#媒体特性" class="headerlink" title="媒体特性"></a>媒体特性</h3><table><thead><tr><th>值</th><th>含义</th></tr></thead><tbody><tr><td>width</td><td>检测视口宽度</td></tr><tr><td>max-width</td><td>检测视口最大宽度</td></tr><tr><td>min-width</td><td>检测视口最小宽度</td></tr><tr><td>height&#x2F;max-height&#x2F;min-height</td><td>类似宽度</td></tr><tr><td>device-width&#x2F;max-device-width&#x2F;min-device-width</td><td>检测<font color="yellow">屏幕</font>宽度&#x2F;最大宽度&#x2F;最小宽度</td></tr><tr><td>orientation</td><td>检测视口的旋转方向（是否横屏）<br>1.<code>portrait</code>：视口处于纵向，即高度大于等于宽度。<br>2.<code>landscape</code>：视口处于横向，即宽度大于高度。</td></tr></tbody></table><p>完整列表请参考：<strong><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/@media">https://developer.mozilla.org/zh-CN/docs/Web/CSS/@media</a></strong></p><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><table><thead><tr><th>值</th><th>含义</th></tr></thead><tbody><tr><td>and</td><td>并且</td></tr><tr><td>, 或者 or</td><td>或</td></tr><tr><td>not</td><td>非</td></tr><tr><td>only</td><td>是（加载@media后，某些低版本IE浏览器不检测媒体特性和运算符，避免混乱）</td></tr></tbody></table><blockquote><p><a href="https://www.bilibili.com/video/BV1p84y1P7Z5?p=197">https://www.bilibili.com/video/BV1p84y1P7Z5?p=197</a></p><p>《CSS3笔记》 P29</p></blockquote><h2 id="Sass编译器安装"><a href="#Sass编译器安装" class="headerlink" title="Sass编译器安装"></a>Sass编译器安装</h2><p><strong>Sass是一种CSS预处理器。</strong>Sass提供了一种更简单、更优雅的语法来描述CSS，并支持变量、混合器等功能，使CSS开发更加灵活和高效。Sass源码可以通过编译器转换成标准的CSS代码。</p><p>首次安装：首先全局安装。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">npm install sass -g<br></code></pre></td></tr></table></figure><p>vue终端敲下面代码（电脑上之前全局安装过Sass，不需要第一步操作，直接在项目上安装依赖）</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">npm install --save-dev sass-loader<br></code></pre></td></tr></table></figure><h2 id="scoped属性和-deep-v-deep-深度选择器"><a href="#scoped属性和-deep-v-deep-深度选择器" class="headerlink" title="scoped属性和:deep(::v-deep)深度选择器"></a>scoped属性和:deep(::v-deep)深度选择器</h2><h3 id="scoped属性"><a href="#scoped属性" class="headerlink" title="scoped属性"></a>scoped属性</h3><p>vue中的<code>scoped</code>属性用来实现组件级样式封装的一个功能，它确保样式仅作用于当前组件，而不会影响到其他组件。它的渲染规则有：</p><ol><li><code>scoped</code>给当前组件中HTML的所有DOM节点添加一个相同且与其他组件不重复的<code>data属性</code>，来表示组件的唯一性。</li><li>css选择器编译后，会更改为其末尾添加当前组的data属性的属性选择器来私有化样式。</li><li>如果组件内部包含子组件，子组件作为HTML的一个DOM节点会添加data属性，但子组件的子组件不会添加属性。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div class=&quot;container&quot;&gt;<br>    &lt;div&gt;<br>      &lt;div&gt;<br>        &lt;div&gt;<br>          &lt;div style=&quot;color:#FFFFFF&quot;&gt; scoped原理分析 &lt;/div&gt;<br>        &lt;/div&gt;<br>      &lt;/div&gt;<br>    &lt;/div&gt;<br>    &lt;el-tabs&gt;<br>      &lt;el-tab-pane label=&quot;标签1&quot;&gt;<br>        &lt;div style=&quot;color:#FFFF00&quot;&gt;标签内容&lt;/div&gt;<br>      &lt;/el-tab-pane&gt;<br>    &lt;/el-tabs&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>export default &#123;<br>&#125;<br>&lt;/script&gt;<br><br>&lt;style lang=&quot;scss&quot; scoped&gt;<br>.container &#123;<br>  height: 100vh;<br>  width: 100vw;<br>  background: #080E19;<br>  .el-tabs&#123;<br>    background:#000000;<br>    border: 1px solid #FFFFFF;<br>      .el-tabs__content&#123;<br>      background-color: #FFFFFF;<br>    &#125;<br>  &#125;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><img src="/2024/08/02/2024-08-02/%E5%9B%BE1.png" class title="图1"><p>这个例子我们使用了<code>Element-UI</code>组件来渲染页面。<code>Element-UI</code>组件实现了很多控件功能，而每一个控件都是由一个或多个组件实现的。例如<code>el-tabs</code>标签栏，我们可以看到包含了4个组件。</p><img src="/2024/08/02/2024-08-02/%E5%9B%BE2.png" class title="图2"><p>打开控制台分析页面结构。</p><img src="/2024/08/02/2024-08-02/%E5%9B%BE3.png" class title="图3"><p><font color="yellow">根据第一条规则</font>，组件HTML的所有DOM节点都会添加相同的属性<code>data-v-1f2b5af6</code>，计算有多重div容器也会全部添加。</p><p><font color="#FFFF00">根据第三条规则</font>，ElTabs是当前组件的子组件，也会添加属性。但是TabNav、TabBar、ElTabPane是ElTabs组件的子组件，不会添加data属性。</p><img src="/2024/08/02/2024-08-02/%E5%9B%BE4.png" class title="图4"><img src="/2024/08/02/2024-08-02/%E5%9B%BE5.png" class title="图5"><p><font color="yellow">根据第二条规则</font>，<code>.container&#123;&#125;</code>选择器在经过编译以后变成了<code>.container[data-v-1f2b5af6]&#123;&#125;</code>属性选择器。<code>.container .el-tabs&#123;&#125;</code>选择器编程以后成为了<code>.container .el-tabs[data-v-1f2b5af6]</code>选择器。</p><p>那么同理，<code>.container .el-tabs .tabs__content&#123;&#125;</code>选择器编译会成为<code>.container .el-tabs .el-tabs__content[data-v-1f2b5af6]&#123;&#125;</code>。但是由于<code>el.tabs__content</code>并没有添加data属性，<font color="yellow">所以选择器不起作用，背景颜色未改变</font>。</p><p>为了解决这个问题，我们需要使用<code>:deep / ::v-deep</code>深度选择器。</p><h3 id="deep-v-deep"><a href="#deep-v-deep" class="headerlink" title=":deep / ::v-deep"></a><code>:deep / ::v-deep</code></h3><p>在 Vue.js 中，<code>:deep</code> 是一个用于穿透 <code>scoped</code> 样式封装的特殊选择器。它允许你在父组件中应用样式到子组件的内部元素，从而实现样式的深层次影响。</p><p>我们修改上述选择器：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* 原选择器 */</span><br><span class="hljs-selector-class">.el-tabs__content</span>&#123;<br>   <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#FFFFFF</span>;<br>&#125;<br><span class="hljs-comment">/* 更改后选择器 */</span><br>:<span class="hljs-built_in">deep</span>(.el-tabs__content)&#123;<br>   <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#FFFFFF</span>;<br>&#125;<br></code></pre></td></tr></table></figure><img src="/2024/08/02/2024-08-02/%E5%9B%BE6.png" class title="图6"><p>背景色改变，我们看到<font color="yellow"><code>.container .el-tabs .tabs__content&#123;&#125;</code>选择器编译变成了<code>.container .el-tabs[data-v-1f2b5af6] .el-tabs__content&#123;&#125;</code></font>。</p><blockquote><p><a href="https://blog.csdn.net/wgh4318/article/details/128711849">https://blog.csdn.net/wgh4318/article/details/128711849</a></p><p><a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=69">https://www.bilibili.com/video/BV1Zy4y1K7SH?p=69</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>前后端学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>每日总结</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue 组件之间的相互交互</title>
    <link href="/2024/07/31/2024-07-31/"/>
    <url>/2024/07/31/2024-07-31/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="Vue-组件之间的相互交互"><a href="#Vue-组件之间的相互交互" class="headerlink" title="Vue 组件之间的相互交互"></a>Vue 组件之间的相互交互</h1><p>​</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>数学建模-数学建模入门指南</title>
    <link href="/2024/07/24/2024-07-24/"/>
    <url>/2024/07/24/2024-07-24/</url>
    
    <content type="html"><![CDATA[<p>文章介绍数学建模的入门指南，梳理数学建模概念。</p><span id="more"></span><h1 id="数学建模入门指南"><a href="#数学建模入门指南" class="headerlink" title="数学建模入门指南"></a>数学建模入门指南</h1><p>数学建模是一个将<font color="yellow">现实世界的复杂问题转化成数学形式来对问题进行分析和求解的过程</font>。这个过程涉及将实际问题中的复杂因素简化为数学结构，并用数学语言描述这些因素及其相互关系。</p><blockquote><p><strong>引入经典问题：长方形（四角连线呈长方形）的椅子可以在地面上放稳吗？</strong></p></blockquote><p>这是一个现实世界的问题，数学建模的过程就是需要将其转化成数学形式进行分析和求解。主要分为以下五个步骤。</p><h2 id="建模过程"><a href="#建模过程" class="headerlink" title="建模过程"></a>建模过程</h2><h3 id="提出问题"><a href="#提出问题" class="headerlink" title="提出问题"></a>提出问题</h3><p>大家可能会想,题目不是已经给出问题了吗? 是的,但是这里的提出问题是指用数学语言去表达。</p><p>首先<font color="yellow">分析问题</font>，列出问题中涉及的变量，包括适当的单位。经过分析，我们可以用变量表示椅子的位置，用函数表示椅子四脚与地面的距离，进而用数学语言把问题表达出来.</p><p>接着<font color="yellow">模型假设</font>，我们要抛开一些非主干的问题，因此需要对问题做一些假设。模型假设是我们对问题增加的约束条件，在做模型假设是我们要考虑假设的合理性和特殊性。例如我们不能假设地面时完全水平的或是阶梯，这种假设没有意义。</p><ol><li>假设椅子的四条腿一样长，椅子腿与地面接触处抽象为一个点，，四脚的连线呈长方形。</li><li>地面高度是连续变化的，沿周围任意方向都不会出现间断 (高度突变)，即地面是连续曲面。这个假设相当于给出了椅子能放稳的必要条件。</li><li>对于椅子脚的间距和椅子腿的长度而言，地面是相对平坦的，使椅子在任何位置至少有三只脚同时着地。</li></ol><p>然后<font color="yellow">数学表达</font>，根据模型假设和涉及的变量将问题数学化。这一步通常要结合考虑我们可能会用到的模型。</p><p>我们知道，当椅脚与地面的竖直距离为零时，椅脚就着地了，而当这个距离大于零时，椅脚不着地。假设椅子的四脚记作A，B，C，D。根据假设3至少由三只脚同时着地，那么椅子在地面上移动对问题没有影响，只考虑椅子旋转的情况。因此我们假设某一时刻A，B，C着地，以AC与BD连线的交点为原点，AC为X轴建立平面直角坐标系，设OA与X轴的夹角为θ，因为长方形的旋转可代表椅子位置的改变，则旋转角度θ这一变量可表示椅子的位置。A、B两脚与地面竖直距离之和为f（θ），C、D两脚与地面竖直距离之和为g（θ），其中θ∈[0，π]。</p><img src="/2024/07/24/2024-07-24/18b98e4f898657c25044739c34870862.png" class title="图1"><p>在更多复杂的现实问题中，我们在问题分析和模型假设之前，可能还需要进行<font color="yellow">数据集处理</font>工作。例如我们希望建立模型来预测房价，需要进行一下工作：</p><ol><li>数据收集：通过各个平台收集包含多个房屋特征的数据集，例如房屋面积、卧室数量、位置、房价等。</li><li>数据清洗：收集的数据集可能存在很多问题，数据清洗的目标是处理数据中的问题，使数据质量达到可用的标准。包括<ul><li>缺失值处理：比如数据集中有些房屋的“面积”特征缺失，可以用均值、中位数或最频繁值填充缺失值，或者使用插值方法填补缺失值。</li><li>异常值处理：比如发现一些房屋的“面积”值异常大，可能是录入错误，通过统计分析（如箱线图）识别异常值，并根据业务规则决定是否删除或修正这些值。</li><li>重复数据处理：比如数据集中存在重复的房屋记录。我们要删除重复记录，以确保每个房屋只有一个数据条目。</li><li>数据标准化：房屋价格可能使用了不同的货币单位。我们要统一所有价格数据的单位，以便进行比较和分析。</li></ul></li><li>特征工程：目标是从原始数据中提取有用的信息，创建新的特征，或者转换现有特征，以提高模型的性能。<ul><li>特征提取：例如数据集中没有包含房屋的“楼层”信息，但这可能对房价有影响。可以从房屋的描述字段中提取出“楼层”信息，并作为一个新特征添加到数据集中。</li><li>特征归一化：一些特征（如房屋面积和房龄）具有不同的量纲，这可能会影响模型训练。可以对特征进行标准化或归一化，以确保所有特征在相同的尺度上。</li></ul></li></ol><p>最终房屋价格可能与房屋面积、卧室数量、位置、房价、楼层等特征因素有关，我们再列出变量和数学关系。</p><h3 id="选择建模方法"><a href="#选择建模方法" class="headerlink" title="选择建模方法"></a>选择建模方法</h3><p>选择解决问题的一个一般的求解方法。一般地，这一步需要有一定的数学建模经验和技巧。同时需要熟悉相关的文献。要求我们对常见的数学模型和算法有一定的了解。下图列出来针对不同问题的常见模型。</p><h4 id="常用模型"><a href="#常用模型" class="headerlink" title="常用模型"></a>常用模型</h4><img src="/2024/07/24/2024-07-24/%E6%A8%A1%E5%9E%8B%E5%88%86%E7%B1%BB.jpg" class title="图2"><p>例如回归拟合预测模型就是房价预测中常用的一种方法。它通过建立一个数学模型来描述房价与其他特征变量（房屋面积、卧室数量、位置、房价、楼层）之间的关系，从而进行预测。</p><h4 id="常用的十大算法："><a href="#常用的十大算法：" class="headerlink" title="常用的十大算法："></a>常用的十大算法：</h4><ol><li><font color="yellow">蒙特卡罗算法</font>(该算法又称随机性模拟算法，是通过计算机仿真来解决问题的算法，同时可以通过模拟可以来检验自己模型的正确性，是比赛时必用的方法)</li><li><font color="yellow">数据拟合、参数估计、插值等数据处理算法</font>(比赛中通常会遇到大量的数据需要处理，而处理数据的关键就在于这些算法，通常使用Matlab作为工具)</li><li><font color="yellow">线性规划、整数规划、多元规划、二次规划等规划类问题</font>(建模竞赛大多数问题属于最优化问题，很多时候这些问题可以用数学规划算法来描述，通常使用Lindo、Lingo软件实现)</li><li><font color="yellow">图论算法</font>(这类算法可以分为很多种，包括最短路、网络流、二分图等算法，涉及到图论的问题可以用这些方法解决需要认真准备)</li><li><font color="yellow">动态规划、回溯搜索、分治算法、分支定界等计算机算法</font>(这些算法是算法设计中比较常用的方法，很多场合可以用到竞赛中）</li><li><font color="yellow">最优化理论的三大非经典算法:模拟退火法、神经网络、遗传算法</font>(这些问题是用来解决一些较困难的最优化问题的算法，对于有些问题非常有帮助，但是算法的实现比较困难，需慎重使用)</li><li><font color="yellow">网格算法和穷举法</font>(网格算法和穷举法都是暴力搜索最优点的算法，在很多竞赛题中有应用，当重点讨论模型本身而轻视算法的时候，可以使用这种暴力方案，最好使用一些高级语言作为编程工具)</li><li><font color="yellow">一些连续离散化方法</font>(很多问题都是实际来的，数据可以是连续的，而计算机只认的是离散的数据，因此将其离散化后进行差分代替微分、求和代替积分等思想是非常重要的)</li><li><font color="yellow">数值分析算法</font>(如果在比赛中采用高级语言进行编程的话，那一些数值分析中常用的算法比如方程组求解、矩阵运算、函数积分等算法就需要额外编写库函数进行调用)</li><li><font color="yellow">图象处理算法</font>(赛题中有一类问题与图形有关，即使与图形无关，论文中也应该要不乏图片的，这些图形如何展示以及如何处理就是需要解决的问题。</li></ol><h4 id="模型和算法之间的关系"><a href="#模型和算法之间的关系" class="headerlink" title="模型和算法之间的关系"></a>模型和算法之间的关系</h4><ol><li><strong>模型使用算法来实现和优化</strong>：<ul><li><strong>实现模型</strong>：许多模型的实现依赖于算法。例如，支持向量机（SVM）模型需要通过算法来找到最优的分割超平面。</li><li><strong>优化模型</strong>：优化模型中的参数或结构通常使用算法。例如，线性回归模型通过最小二乘算法来确定回归系数。</li></ul></li><li><strong>模型定义了问题，算法提供了解决方案</strong>：<ul><li><strong>模型定义</strong>：模型描述了问题的结构和关系。它定义了要分析的变量、参数及其相互作用。</li><li><strong>算法解决</strong>：算法提供了解决模型中问题的方法和步骤。例如，决策树模型定义了分类规则，而构建决策树的算法（如ID3或C4.5）决定了如何生成树结构。</li></ul></li><li><strong>模型和算法的结合</strong>：<ul><li><strong>模型构建</strong>：在构建模型时，需要选择和设计合适的算法来实现模型的功能。例如，在机器学习中，选择模型（如神经网络）时，需要应用相应的训练算法（如反向传播算法）。</li><li><strong>模型评估和优化</strong>：模型的效果可以通过算法来评估和优化。例如，交叉验证算法可以用来评估模型的性能，超参数优化算法（如网格搜索、随机搜索）可以用来调整模型的参数。</li></ul></li></ol><h3 id="推导模型的公式"><a href="#推导模型的公式" class="headerlink" title="推导模型的公式"></a>推导模型的公式</h3><p>将第一步中得到的问题重新表达成第二步选定的建模方法所需要的形式，从而<font color="yellow">构建模型</font>，确保第一步中的变量名与第二步的一致。记下任何补充假设，这些假设是为了使第一步中描述的问题与第二步中选定的数学结构相适应而做出的。</p><p>在椅子平稳性问题中，数学模型构建：已知f（θ）和g（θ）是θ的非负连续函数，对∀θ，f（θ）•g(θ)＝0，证明：∃θ0∈[0，π]，使得f（θ0）＝g（θ0）＝0成立。</p><p>在房价预测问题中，数学模型构建：通过线性函数用于建模多个自变量 x1,x2,……xp 和一个因变量 y 之间的线性关系。</p><img src="/2024/07/24/2024-07-24/image-20240724224309134.png" class title="图3"><p>其中自变量X可以表示房屋面积、卧室数量、位置、房价、楼层等特征变量，y是房价。</p><h3 id="求解模型"><a href="#求解模型" class="headerlink" title="求解模型"></a>求解模型</h3><p>将第二步中所选方法应用于第三步得到的表达式，再求解过程中注意数学推导，确保推导过程无误且结果有意义。并采用适当的方法扩大解决问题的范围并减少计算错误。</p><p>在椅子平稳性问题中，①若f（0）＝g（0）＝0，那么结论成立。②若f（0）与g（0）不同时为零，不妨设f（0）＞0，g（0）＝0。将长方形ABCD绕点O逆时针旋转角度π后，A，B与C，D互换，但长方形ABCD在地面上所处的位置不变，由此可知，f（π）＝g（0），g（π）＝f（0）.∴f（0）＞0，g（0）＝0 → g（π）＞0，f（π）＝0。</p><p>令h（θ）＝f(θ)－g（θ），由f(θ)和g(θ)的连续性知h(θ)也是连续函数。又h（0）＝f(0)－g（0）＞0，h（π）＝f(π)－g（π）＜0，根据连续函数介值定理，必存在θ0∈（0，π）使得h（θ0）＝0，即f（θ0）＝g（θ0） ；又因为f（θ0）•g（θ0）＝0，所以f（θ0）＝g（θ0）＝0。即四只脚同时着地，稳定。</p><p>在预测房价问题中，需要是预测的房价和真实的房价的误差趋于最小，使用最小二乘法作为损失函数优化模型，即使图中Q值趋于最小。也就是当梯度为零的时候取最小值。</p><img src="/2024/07/24/2024-07-24/image-20240724225420896.png" class title="图4"><img src="/2024/07/24/2024-07-24/image-20240724225449385.png" class title="图5"><p>这一过程需要对建模工具有一定的掌握。</p><ol><li><p>统计模型：SPSS,Eviews，Stata 。</p></li><li><p>数据分析：R，数据库SQL Server，IBM，DB2</p></li><li><p>微分方程：Maple, Mathematic, MATLAB</p></li><li><p>运筹规划：Matlab，Lingo</p></li><li><p>智能算法：Matlab，R</p></li><li><p>时间序列：R，Matlab</p></li><li><p>图像处理：Matlab，C++</p></li></ol><h3 id="回答问题"><a href="#回答问题" class="headerlink" title="回答问题"></a>回答问题</h3><p>最终在论文中我们需要用非技术性的语言将第四步的结果重新表述，表述过程中需要避免数学符号和术语。这部分是对你整篇论文成果的总结，一定要写的有深度。除此之外，通常还要写上一些灵敏度分析，如果是统计模型的话，要有模型检验。论文通常会需要画一些图表，可以使用Matlab、R等软件来画跟数据有关的图，使用Visio或者PPT画流程图之类的图。</p><p>在椅子平稳性问题中，椅子在旋转过程中，至少存在一个点能使椅子能在不平的地面上放稳。</p><p>在预测房价问题中，根据我们推导出的模型，当已知特征变量时，能够预测房屋价格。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>在建模的五步法中，整个建模需要的工作包括：</p><ol><li>数据收集：要构建有效的模型，首先需要获得相关的数据。这些数据可以来自多种渠道。</li><li>数据清理：原始数据往往包含噪声、缺失值和异常值，因此在建模之前必须对数据进行清理。数据清理的过程包括：</li><li>特征工程：特征工程是指从原始数据中提取和构造有助于模型预测的特征</li><li>模型选择与建立：根据问题的性质和数据的特点，选择合适的数学或统计模型。常见的模型类型包括：</li><li>模型求解：在模型建立之后，需要对模型进行求解、训练和验证。</li><li>模型评估：评估模型的性能是检验模型有效性的重要步骤。</li><li>问题回答：用非技术语言解释模型的预测结果和模型的原理和假设等</li></ol><h2 id="必备知识"><a href="#必备知识" class="headerlink" title="必备知识"></a>必备知识</h2><h3 id="理论基础"><a href="#理论基础" class="headerlink" title="理论基础"></a>理论基础</h3><ul><li><font color="yellow">高数、线性代数和概率论与统计基础。</font>在数学建模过程中我们要能够掌握函数的变化、极值、导数、积分等概念，对于优化问题和动态系统建模非常重要。而矩阵运算、特征值、特征向量、线性方程组等概念在处理数据、优化问题和统计分析中至关重要。同时还需要处理不确定性和随机性，涉及概率分布、期望值、方差、假设检验等问题。</li><li><font color="yellow">掌握常见模型和算法。</font>只有对常见模型和算法有一定的了解，才能在选择解决问题的一个一般的求解方法时，找到合适和模型。不一定要对模型有很深的了解，但要知道不同模型能够用在哪些问题上。</li></ul><h3 id="编程代码"><a href="#编程代码" class="headerlink" title="编程代码"></a>编程代码</h3><ul><li><strong>Matlab</strong>：交互式编程软件，将海量算法或工具进行封存，能仿真、能绘图、能求解，可直接调用。</li><li><strong>Python</strong>：主要针对机器学习算法和深度学习，以及数据分析是非常方便的。</li><li><strong>SPSS</strong>：专业的统计数据分析软件，有大量统计模型可直接使用。</li><li><strong>Lingo</strong>：交互式的线性和通用优化求解器，可以用于求解各类规划模型。</li></ul><h3 id="写作排版"><a href="#写作排版" class="headerlink" title="写作排版"></a>写作排版</h3><ul><li><strong>WORD(或WPS)</strong>:论文写作专用，并可以导成PDF格式</li><li><strong>EXCEL</strong>:分析数据、并绘制数据走势图等精美图片Mathtype:公式编辑器，用于编写各类数学公式和特殊符号</li><li><strong>Mathpix</strong>:公式提取软件，用于将其他论文的公式提取到自己论文中</li><li><strong>Checker</strong>:英文文章语言免费检查软件，可分析语法、拼写等错误</li><li><strong>LaTeX</strong>:论文排版软件，主要利用编程语言对论文进行排版</li></ul><h3 id="文献检索"><a href="#文献检索" class="headerlink" title="文献检索"></a>文献检索</h3><p>文献检索也是很重要的，数模竞赛题目往往具有一定的专业性，需要学会查到相关领域的论文并加以利用。</p><h2 id="建模比赛"><a href="#建模比赛" class="headerlink" title="建模比赛"></a>建模比赛</h2><p>只有参加比赛在实践中才能帮助我们快速提升，通过比赛熟悉从数据收集、建立模型到论文撰写的整个流程；提示文献查阅、工具使用和代码编写的能力；感受团队协作、学术讨论、全力以赴的氛围。刚开始的时候要端正好心态，不要盲目的追求获奖，以学习练兵为目标。</p><h3 id="如何组队"><a href="#如何组队" class="headerlink" title="如何组队"></a>如何组队</h3><p>建模比赛都是是三个人组队，一般来说为：一人负责编程、一人负责建模、一人负责论文。</p><p>队长通常由建模手担任，需要具备的是<strong>领导力、沟通协调能力、时间管理能力和决策能力</strong>。他不仅要掌控比赛进度，建立有效的沟通机制，合理分配各阶段的任务和时间，还要激发团队士气，综合团队意见，做出明智的决策。</p><p>建模手的首要任务深入解析题目要求，确保对问题的全面准确理解。随后需<strong>广泛搜集并研读相关领域的最新文献</strong>，提炼出关键的研究方法和理论框架。基于这些资料<strong>设计并构建数学模型</strong>，明确模型假设、参数设定及逻辑推导过程，形成模型初稿。在编程手和写作手的反馈下不断<strong>迭代优化模型</strong>，确保其既符合题目要求又便于编程实现和论文撰写。</p><p>赛前，写作手要<strong>熟悉论文写作规范</strong>，准备好论文模板和必要的写作工具（如Word、LaTeX）。根据建模手提供的模型初稿和深入分析，展开详细的论述，包括背景介绍、文献综述、模型构建、结果分析等多个部分，确保论文内容充实、逻辑严谨。在编程手完成编程工作后，将<strong>结合编程结果和模型理论</strong>，进行深入的分析和讨论，提升论文的学术价值和说服力。最后<strong>全面审查论文</strong>，修正语法错误、优化排版布局，确保论文的整洁美观。</p><p>编程要<strong>做好技术准备</strong>，赛前熟练掌握至少一种编程语言（如Python、MATLAB）并安装调试好运行环境。在明确建模手M的模型求解需求后，要<strong>迅速制定编程方案</strong>，编写高效、准确的代码来实现模型求解。在编程过程中应<strong>注重代码的可读性和可维护性</strong>，并在适当位置添加注释和输出中间结果，以便于调试和后续分析。在编程完成后，<strong>整理编程结果</strong>，并将其转化为易于理解和分析的表格、图形等形式，为写作手提供有力的数据支持。</p><h3 id="数学建模比赛"><a href="#数学建模比赛" class="headerlink" title="数学建模比赛"></a>数学建模比赛</h3><img src="/2024/07/24/2024-07-24/ed05abae7f4a47958d3243172a469d29_%E7%9C%8B%E5%9B%BE%E7%8E%8B.png" class title="图6"><blockquote><p>图片来源：<a href="https://blog.csdn.net/weixin_61644243/article/details/136262876">https://blog.csdn.net/weixin_61644243/article/details/136262876</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>每日总结</tag>
      
      <tag>数学分析</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前端学习-ECharts使用（2）</title>
    <link href="/2024/07/23/2024-07-23/"/>
    <url>/2024/07/23/2024-07-23/</url>
    
    <content type="html"><![CDATA[<p>文章介绍了EChats图表构建中Axis、Grid、Legend、Tooltip的常见用法。</p><span id="more"></span><h1 id="前端学习-ECharts的使用（2）"><a href="#前端学习-ECharts的使用（2）" class="headerlink" title="前端学习-ECharts的使用（2）"></a>前端学习-ECharts的使用（2）</h1><blockquote><p>个人学习总结，可能存在错误。</p></blockquote><hr><p>本文以下面代码为初始状态进行分析ECharts配置项的基本使用，我们总结了常用的配置项，并尽量总结了它们之间的联系，<font color="yellow">当然在使用的时候我们还是需要结合官方的API文档和配置项文档使用</font>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> dataX=[];<br><span class="hljs-keyword">let</span> dataY1=[];<br><span class="hljs-keyword">let</span> dataY2=[];<br><span class="hljs-keyword">let</span> count=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(;count&lt;<span class="hljs-number">20</span>;count++)&#123;<br>  dataX.<span class="hljs-title function_">push</span>((count+<span class="hljs-number">1</span>).<span class="hljs-title function_">toString</span>());<br>  dataY2.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>());<br>  dataY1.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>());<br>&#125;<br><br>option=&#123;<br>  <span class="hljs-attr">textStyle</span>:&#123;<br>    <span class="hljs-attr">fontFamily</span>:<span class="hljs-string">&quot;STZhongsong&quot;</span>,<br>    <span class="hljs-attr">color</span>:<span class="hljs-string">&quot;white&quot;</span>,<br>  &#125;,<br>  <span class="hljs-attr">title</span>:&#123;<br>    <span class="hljs-attr">text</span>:<span class="hljs-string">&quot;2024-07-23&quot;</span>,<br>    <span class="hljs-attr">textStyle</span>:&#123;<br>      <span class="hljs-attr">color</span>:<span class="hljs-string">&quot;yellow&quot;</span><br>    &#125;,<br>    <span class="hljs-attr">subtext</span>:<span class="hljs-string">&quot;-- by Xiang&quot;</span><br>  &#125;,<br>  <span class="hljs-comment">//XY轴</span><br>  <span class="hljs-attr">xAxis</span>:&#123;<br>    <span class="hljs-attr">type</span>:<span class="hljs-string">&quot;category&quot;</span>,<br>    <span class="hljs-attr">data</span>:dataX,<br>  &#125;,<br>  <span class="hljs-attr">yAxis</span>:[<br>    &#123;<br>    <span class="hljs-attr">type</span>:<span class="hljs-string">&quot;value&quot;</span>,<br>    <span class="hljs-attr">min</span>:<span class="hljs-number">0</span>,<br>    <span class="hljs-attr">max</span>:<span class="hljs-number">2</span>,<br>    &#125;,<br>  ],<br>  <span class="hljs-comment">//数据系列</span><br>  <span class="hljs-attr">series</span>:[<br>    &#123;<br>      <span class="hljs-attr">name</span>:<span class="hljs-string">&quot;line1&quot;</span>,<br>      <span class="hljs-attr">type</span>:<span class="hljs-string">&#x27;line&#x27;</span>,<br>      <span class="hljs-attr">data</span>:dataY1,<br>      <span class="hljs-attr">smooth</span>:<span class="hljs-literal">true</span>,<br>      <span class="hljs-attr">areaStyle</span>:&#123;&#125;<br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">name</span>:<span class="hljs-string">&quot;line2&quot;</span>,<br>      <span class="hljs-attr">type</span>:<span class="hljs-string">&quot;line&quot;</span>,<br>      <span class="hljs-attr">data</span>:dataY2,<br>      <span class="hljs-attr">smooth</span>:<span class="hljs-literal">true</span>,<br>      <span class="hljs-attr">areaStyle</span>:&#123;&#125;<br>    &#125;<br>  ],<br>  <span class="hljs-comment">//图例</span><br>  <span class="hljs-attr">legend</span>:&#123;<br>    <span class="hljs-attr">backgroundColor</span>:<span class="hljs-string">&quot;grey&quot;</span>,<br>    <span class="hljs-attr">data</span>:[<span class="hljs-string">&quot;line1&quot;</span>,<span class="hljs-string">&#x27;line2&#x27;</span>],<br>    <span class="hljs-attr">textStyle</span>:&#123;<br>      <span class="hljs-attr">fontSize</span>:<span class="hljs-number">20</span>,<br>      <span class="hljs-attr">color</span>:<span class="hljs-string">&quot;red&quot;</span>,<br>    &#125;<br>  &#125;,<br>  <span class="hljs-comment">//提示框</span><br>  <span class="hljs-attr">tooltip</span>:&#123;<br>    <span class="hljs-attr">trigger</span>:<span class="hljs-string">&quot;axis&quot;</span>,<br>    <span class="hljs-attr">axisPointer</span>:&#123;<br>      <span class="hljs-attr">type</span>:<span class="hljs-string">&quot;cross&quot;</span>,<br>      <span class="hljs-attr">label</span>:&#123;<br>        <span class="hljs-attr">backgroundColor</span>:<span class="hljs-string">&quot;grey&quot;</span>,<br>        <span class="hljs-attr">color</span>:<span class="hljs-string">&quot;red&quot;</span>,<br>      &#125;<br>    &#125;<br>  &#125;,<br>&#125;<br></code></pre></td></tr></table></figure><p>得到效果图如下：</p><img src="/2024/07/23/2024-07-23/%E5%9B%BE1.png" class title="图1"><h2 id="ECharts-Axis配置项"><a href="#ECharts-Axis配置项" class="headerlink" title="ECharts Axis配置项"></a>ECharts Axis配置项</h2><p><font color="yellow">Axis常用配置项的汇总如下：</font></p><table><thead><tr><th>属性</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>type</code></td><td><code>string</code></td><td>坐标轴类型：’value’（数值轴）、’category’（类目轴）、’time’（时间轴）、’log’（对数轴）。<font color="yellow">横坐标通常是用’category’，纵坐标更多使用’value’</font>。</td></tr><tr><td><code>position</code></td><td><code>string</code></td><td>坐标轴的位置：’top’、’bottom’、’left’、’right’。</td></tr><tr><td><code>name</code></td><td><code>string</code></td><td>坐标轴的名称。</td></tr><tr><td><code>nameLocation</code></td><td><code>string</code></td><td>坐标轴名称显示位置：’start’、’middle’、’end’。</td></tr><tr><td><code>nameTextStyle</code></td><td><code>Object</code></td><td>坐标轴名称的文字样式。</td></tr><tr><td><code>nameGap</code></td><td><code>number</code></td><td>坐标轴名称与轴线之间的距离。</td></tr><tr><td><code>nameRotate</code></td><td><code>number</code></td><td>坐标轴名字旋转角度。</td></tr><tr><td><code>inverse</code></td><td><code>boolean</code></td><td>是否是反向坐标轴。</td></tr><tr><td><code>boundaryGap</code></td><td><code>boolean</code>&#x2F;<code>Array</code></td><td>类目轴中类目之间的间距或数值轴的起始和结束位置。<font color="yellow">横坐标设置boundratGap为false，则图表紧贴y坐标轴。</font></td></tr><tr><td><code>min</code></td><td><code>number</code>&#x2F;<code>string</code>&#x2F;<code>Function</code></td><td>坐标轴刻度最小值。可以设置具体值，或设置为 ‘dataMin’。</td></tr><tr><td><code>max</code></td><td><code>number</code>&#x2F;<code>string</code>&#x2F;<code>Function</code></td><td>坐标轴刻度最大值。可以设置具体值，或设置为 ‘dataMax’。</td></tr><tr><td><code>scale</code></td><td><code>boolean</code></td><td>只在数值轴中（type: ‘value’）有效，是否是脱离 0 值比例。</td></tr><tr><td><code>splitNumber</code></td><td><code>number</code></td><td>坐标轴的分割段数。</td></tr><tr><td><code>minInterval</code></td><td><code>number</code></td><td>自动计算的坐标轴最小间隔大小。</td></tr><tr><td><code>maxInterval</code></td><td><code>number</code></td><td>自动计算的坐标轴最大间隔大小。</td></tr><tr><td><code>interval</code></td><td><code>number</code></td><td>强制设置坐标轴分割间隔。</td></tr><tr><td><code>logBase</code></td><td><code>number</code></td><td>对数轴的底数，只在对数轴中（type: ‘log’）有效。</td></tr><tr><td><code>silent</code></td><td><code>boolean</code></td><td>坐标轴是否静默。<font color="yellow">当设置为 <code>true</code> 时，该元素将不响应任何交互事件。</font></td></tr><tr><td><code>triggerEvent</code></td><td><code>boolean</code></td><td>坐标轴的标签是否触发鼠标事件。</td></tr><tr><td><code>axisLine</code></td><td><code>Object</code></td><td>坐标轴轴线的相关设置。</td></tr><tr><td><code>axisTick</code></td><td><code>Object</code></td><td>坐标轴刻度相关设置。</td></tr><tr><td><code>axisLabel</code></td><td><code>Object</code></td><td>坐标轴刻度标签的相关设置。</td></tr><tr><td><code>splitLine</code></td><td><code>Object</code></td><td>坐标轴在 grid 区域中的分隔线。</td></tr><tr><td><code>splitArea</code></td><td><code>Object</code></td><td>坐标轴在 grid 区域中的分隔区域，默认不显示。</td></tr><tr><td><code>data</code></td><td><code>Array</code></td><td>类目数据，在类目轴（type: ‘category’）中有效。</td></tr><tr><td><code>axisPointer</code></td><td><code>Object</code></td><td>坐标轴指示器配置项。</td></tr><tr><td><code>zlevel</code></td><td><code>number</code></td><td>组件的所有图形的 zlevel 值。</td></tr><tr><td><code>z</code></td><td><code>number</code></td><td>组件的所有图形的 z 值。</td></tr></tbody></table><h3 id="图片翻转"><a href="#图片翻转" class="headerlink" title="图片翻转"></a>图片翻转</h3><ul><li>配置项<code>inverse</code></li></ul><img src="/2024/07/23/2024-07-23/%E5%9B%BE2.png" class title="图2"><p>我们修改上述代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">yAxis</span>:[<br>    &#123;<br>        <span class="hljs-attr">type</span>:<span class="hljs-string">&quot;value&quot;</span>,<br>        <span class="hljs-attr">min</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">max</span>:<span class="hljs-number">2</span>,<br>    &#125;,<br>    &#123;<br>        <span class="hljs-attr">type</span>:<span class="hljs-string">&quot;value&quot;</span>,<br>        <span class="hljs-attr">min</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">max</span>:<span class="hljs-number">2</span>,<br>        <span class="hljs-attr">inverse</span>:<span class="hljs-literal">true</span>, <span class="hljs-comment">//反向第二条坐标轴</span><br>    &#125;<br>],<br><span class="hljs-attr">series</span>:[<br>    &#123;...&#125;,<br>    &#123;...<br>    <span class="hljs-attr">yAxisIndex</span>:<span class="hljs-number">1</span>, <span class="hljs-comment">//将数据系列二绑定在第二条坐标轴，实现系列二反转。</span><br>    &#125;<br>]<br></code></pre></td></tr></table></figure><h3 id="坐标旋转"><a href="#坐标旋转" class="headerlink" title="坐标旋转"></a>坐标旋转</h3><img src="/2024/07/23/2024-07-23/%E5%9B%BE3.png" class title="图3"><p><font color="yellow">只需互换xAxis和yAxis即可。</font></p><h3 id="分割段设置"><a href="#分割段设置" class="headerlink" title="分割段设置"></a>分割段设置</h3><ul><li>配置项：<code>splitLine</code>、<code>interval</code>、<code>splitnumber</code></li></ul><img src="/2024/07/23/2024-07-23/%E5%9B%BE4.png" class title="图4"><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">xAxis</span>:&#123;<br>    <span class="hljs-attr">splitLine</span>:&#123;<br>        <span class="hljs-attr">show</span>:<span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">interval</span>:<span class="hljs-number">3</span>, <span class="hljs-comment">//设置两根分割段之间的间隔</span><br>        <span class="hljs-attr">spliteNumber</span>: <span class="hljs-number">4</span>,<span class="hljs-comment">//分割段数量，与interval可能发生冲突</span><br>        <span class="hljs-attr">lineStyle</span>:&#123; <span class="hljs-comment">//样式设计</span><br>            <span class="hljs-attr">color</span>:<span class="hljs-string">&quot;red&quot;</span>,<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>splitArea的用法和splitLine相似。</p><h3 id="坐标轴渲染"><a href="#坐标轴渲染" class="headerlink" title="坐标轴渲染"></a>坐标轴渲染</h3><p>配置项：<code>axisTick</code>、<code>axisLine</code>、<code>axisLabel</code>、<code>name</code>、<code>nameStyle</code>、<code>nameLocation</code></p><p>坐标轴的渲染包括坐标轴刻度线、坐标轴轴线、坐标轴轴标签以及坐标轴名字的渲染。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">xAxis</span>:&#123;<br>    <span class="hljs-attr">type</span>:<span class="hljs-string">&quot;category&quot;</span>,<br>    <span class="hljs-attr">name</span>:<span class="hljs-string">&quot;横坐标&quot;</span>，<br>    <span class="hljs-attr">nameLocation</span>:<span class="hljs-string">&quot;middle&quot;</span> <span class="hljs-comment">//名字位置在中间</span><br>    <span class="hljs-attr">nameGap</span>: <span class="hljs-number">20</span>, <span class="hljs-comment">//名字与轴标签的距离</span><br>    <span class="hljs-attr">nameRotate</span>:<span class="hljs-number">45</span>, <span class="hljs-comment">//名字旋转角度</span><br>    <span class="hljs-attr">nameStyle</span>:&#123;<br>        <span class="hljs-comment">//样式</span><br>        <span class="hljs-attr">padding</span>:<span class="hljs-number">20</span>,<br>    &#125;<br>    <span class="hljs-comment">//坐标轴刻度线。</span><br>    <span class="hljs-attr">axisTick</span>:&#123;<br>        <span class="hljs-attr">show</span>:<span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">inside</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">//标签是否向内部</span><br>        <span class="hljs-attr">length</span>: <span class="hljs-number">10</span>, <span class="hljs-comment">//刻度线长度</span><br>        <span class="hljs-attr">alignWithLabel</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">//刻度线是否需标签对齐</span><br>        <span class="hljs-attr">inverval</span>:<span class="hljs-string">&quot;auto&quot;</span>，<span class="hljs-comment">//刻度线分布</span><br>        <span class="hljs-attr">lineStyle</span>:&#123; <span class="hljs-comment">//样式设置</span><br>            <span class="hljs-attr">color</span>:<span class="hljs-string">&quot;yellow&quot;</span><br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">//坐标轴轴线</span><br>    <span class="hljs-attr">axisLine</span>:&#123;<br>        <span class="hljs-attr">show</span>:<span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">lineStyle</span>:&#123;<br>            <span class="hljs-attr">color</span>:<span class="hljs-string">&quot;red&quot;</span>, <br>        &#125;<br>        <span class="hljs-attr">symbol</span>:<span class="hljs-string">&quot;arrow&quot;</span> <span class="hljs-comment">//箭头</span><br>    &#125;<br>    <span class="hljs-comment">//坐标轴轴标签</span><br>    <span class="hljs-attr">axisLabel</span>:&#123;<br>        <span class="hljs-attr">show</span>:<span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">interval</span>:<span class="hljs-string">&quot;auto&quot;</span>，<span class="hljs-comment">//标签分布。</span><br>        <span class="hljs-attr">textStyle</span>:&#123;<br>            <span class="hljs-attr">color</span>:<span class="hljs-string">&quot;red&quot;</span>,<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>效果如下：</p><img src="/2024/07/23/2024-07-23/%E5%9B%BE5.png" class title="图5"><p>更加详细的配置项如下：</p><p><font color="yellow"><strong><code>axisTick</code> 配置项总结表：</strong></font></p><table><thead><tr><th>属性</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>show</code></td><td><code>boolean</code></td><td>是否显示坐标轴刻度。</td></tr><tr><td><code>alignWithLabel</code></td><td><code>boolean</code></td><td>刻度线和标签对齐。仅在类目轴中有效。</td></tr><tr><td><code>interval</code></td><td><code>string</code>&#x2F;<code>number</code>&#x2F;<code>Function</code></td><td>坐标轴刻度的显示间隔，默认为 ‘auto’。</td></tr><tr><td><code>inside</code></td><td><code>boolean</code></td><td>坐标轴刻度是否朝内。</td></tr><tr><td><code>length</code></td><td><code>number</code></td><td>坐标轴刻度的长度。</td></tr><tr><td><code>lineStyle</code></td><td><code>Object</code></td><td>坐标轴刻度的样式，包括颜色、宽度、类型等。</td></tr></tbody></table><p><font color="yellow"><strong><code>axisLine</code> 配置项总结表：</strong></font></p><table><thead><tr><th>属性</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>show</code></td><td><code>boolean</code></td><td>是否显示坐标轴轴线。</td></tr><tr><td><code>onZero</code></td><td><code>boolean</code></td><td>X 轴 Y 轴相交于 0 刻度。仅在双数值轴中有效。</td></tr><tr><td><code>onZeroAxisIndex</code></td><td><code>number</code></td><td>使用的另一个坐标轴的 axisIndex。仅在双数值轴中有效。</td></tr><tr><td><code>symbol</code></td><td><code>string</code>&#x2F;<code>Array</code></td><td>轴线两头的箭头。 <code>&#39;circle&#39;</code>：圆形；<code>&#39;rect&#39;</code>：矩形；<code>&#39;roundRect&#39;</code>：圆角矩形；<code>&#39;triangle&#39;</code>：三角形；<code>&#39;diamond&#39;</code>：菱形；<code>&#39;pin&#39;</code>：图钉形状；<code>&#39;arrow&#39;</code>：箭头形状；<code>&#39;path://...&#39;</code>：自定义路径</td></tr><tr><td><code>symbolSize</code></td><td><code>Array</code></td><td>轴线两头箭头的大小。</td></tr><tr><td><code>symbolOffset</code></td><td><code>Array</code></td><td>轴线两头箭头的偏移。</td></tr><tr><td><code>lineStyle</code></td><td><code>Object</code></td><td>坐标轴线的样式，包括颜色、宽度、类型等。</td></tr></tbody></table><p><font color="yellow"><strong><code>axisLabel</code> 配置项总结表：</strong></font></p><table><thead><tr><th>属性</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>show</code></td><td><code>boolean</code></td><td>是否显示坐标轴刻度标签。</td></tr><tr><td><code>interval</code></td><td><code>string</code>&#x2F;<code>number</code>&#x2F;<code>Function</code></td><td>坐标轴刻度标签的显示间隔，默认为 ‘auto’。</td></tr><tr><td><code>inside</code></td><td><code>boolean</code></td><td>坐标轴刻度标签是否朝内。</td></tr><tr><td><code>rotate</code></td><td><code>number</code></td><td>坐标轴刻度标签的旋转角度。</td></tr><tr><td><code>margin</code></td><td><code>number</code></td><td>刻度标签与轴线之间的距离。</td></tr><tr><td><code>formatter</code></td><td><code>string</code>&#x2F;<code>Function</code></td><td>刻度标签的内容格式器。</td></tr><tr><td><code>showMinLabel</code></td><td><code>boolean</code></td><td>是否显示最小刻度标签。</td></tr><tr><td><code>showMaxLabel</code></td><td><code>boolean</code></td><td>是否显示最大刻度标签。</td></tr><tr><td><code>color</code></td><td><code>string</code></td><td>刻度标签文字的颜色。</td></tr><tr><td><code>fontStyle</code></td><td><code>string</code></td><td>刻度标签文字的字体风格。</td></tr><tr><td><code>fontWeight</code></td><td><code>string</code></td><td>刻度标签文字的字体粗细。</td></tr><tr><td><code>fontFamily</code></td><td><code>string</code></td><td>刻度标签文字的字体系列。</td></tr><tr><td><code>fontSize</code></td><td><code>number</code></td><td>刻度标签文字的字体大小。</td></tr><tr><td><code>align</code></td><td><code>string</code></td><td>刻度标签文字水平对齐方式。</td></tr><tr><td><code>verticalAlign</code></td><td><code>string</code></td><td>刻度标签文字垂直对齐方式。</td></tr><tr><td><code>lineHeight</code></td><td><code>number</code></td><td>刻度标签文字的行高。</td></tr><tr><td><code>backgroundColor</code></td><td><code>string</code>&#x2F;<code>Object</code></td><td>刻度标签背景色。</td></tr><tr><td><code>borderColor</code></td><td><code>string</code></td><td>刻度标签边框颜色。</td></tr><tr><td><code>borderWidth</code></td><td><code>number</code></td><td>刻度标签边框宽度。</td></tr><tr><td><code>borderRadius</code></td><td><code>number</code>&#x2F;<code>Array</code></td><td>刻度标签边框圆角。</td></tr><tr><td><code>padding</code></td><td><code>number</code>&#x2F;<code>Array</code></td><td>刻度标签内边距。</td></tr><tr><td><code>shadowColor</code></td><td><code>string</code></td><td>刻度标签文字的阴影颜色。</td></tr><tr><td><code>shadowBlur</code></td><td><code>number</code></td><td>刻度标签文字的阴影模糊度。</td></tr><tr><td><code>shadowOffsetX</code></td><td><code>number</code></td><td>刻度标签文字的阴影水平偏移。</td></tr><tr><td><code>shadowOffsetY</code></td><td><code>number</code></td><td>刻度标签文字的阴影垂直偏移。</td></tr><tr><td><code>textBorderColor</code></td><td><code>string</code></td><td>刻度标签文字的描边颜色。</td></tr><tr><td><code>textBorderWidth</code></td><td><code>number</code></td><td>刻度标签文字的描边宽度。</td></tr><tr><td><code>textShadowColor</code></td><td><code>string</code></td><td>刻度标签文字的阴影颜色。</td></tr><tr><td><code>textShadowBlur</code></td><td><code>number</code></td><td>刻度标签文字的阴影模糊度。</td></tr><tr><td><code>textShadowOffsetX</code></td><td><code>number</code></td><td>刻度标签文字的阴影水平偏移。</td></tr><tr><td><code>textShadowOffsetY</code></td><td><code>number</code></td><td>刻度标签文字的阴影垂直偏移。</td></tr></tbody></table><p><strong><font color="yellow">注意点：</font></strong></p><ol><li>axisTick和axisLabel的<code>interval</code>用于显示标签和刻度线之间的间隔。<ul><li>axisLabel默认值为<code>auto</code>，系统根据标签名自动调整标签之间的间隔。</li><li>axisLabel值为0，默认显示所有的的标签，值为n，则每隔n个数据项显示一个标签。</li><li>axisLine默认值为<code>auto</code>，系统根据标签名自动调整刻度线之间的间隔。</li><li>axisLine值为0，默认显示和标签数量相同的刻度线，值为n，则每隔n个标签显示一个刻度线。</li></ul></li><li><font color="yellow">axisLabel的<code>interval</code>只适用于<code>category</code>类别轴，如果轴是<code>value</code>，数值是连续的，则<code>interval</code>不起作用</font>。标签的数量由分割线的数量决定。通过<code>splitLine</code>样式设置分割线数量。</li><li>axisLabel的样式配置可以直接在组件元素中配置，也可以在<code>textStyle</code>在配置。</li></ol><h2 id="ECharts-Grid配置项"><a href="#ECharts-Grid配置项" class="headerlink" title="ECharts Grid配置项"></a>ECharts Grid配置项</h2><p><code>grid</code>配置项在ECharts中用于设置图表的网络布局和样式，用于控制图表的坐标轴区域。一个容器可以放置多个网格<code>grid</code>，不同网站中可以绘制不同的坐标轴。</p><p><font color="yellow">Grid常用配置项的汇总如下：</font></p><table><thead><tr><th>属性</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>show</code></td><td><code>boolean</code></td><td>是否显示 grid 组件。</td></tr><tr><td><code>left</code></td><td><code>number</code>&#x2F;<code>string</code></td><td>grid 区域离容器左侧的距离，可以是百分比或者像素值。</td></tr><tr><td><code>right</code></td><td><code>number</code>&#x2F;<code>string</code></td><td>grid 区域离容器右侧的距离，可以是百分比或者像素值。</td></tr><tr><td><code>top</code></td><td><code>number</code>&#x2F;<code>string</code></td><td>grid 区域离容器顶部的距离，可以是百分比或者像素值。</td></tr><tr><td><code>bottom</code></td><td><code>number</code>&#x2F;<code>string</code></td><td>grid 区域离容器底部的距离，可以是百分比或者像素值。</td></tr><tr><td><code>containLabel</code></td><td><code>boolean</code></td><td>是否包含坐标轴标签在 grid 区域内。</td></tr><tr><td><code>backgroundColor</code></td><td><code>string</code>&#x2F;<code>Object</code></td><td>grid 区域的背景颜色。</td></tr><tr><td><code>borderColor</code></td><td><code>string</code></td><td>grid 区域的边框颜色。</td></tr><tr><td><code>borderWidth</code></td><td><code>number</code></td><td>grid 区域的边框宽度。</td></tr><tr><td><code>shadowColor</code></td><td><code>string</code></td><td>grid 区域的阴影颜色。</td></tr><tr><td><code>shadowBlur</code></td><td><code>number</code></td><td>grid 区域的阴影模糊度。</td></tr><tr><td><code>shadowOffsetX</code></td><td><code>number</code></td><td>grid 区域阴影的水平偏移。</td></tr><tr><td><code>shadowOffsetY</code></td><td><code>number</code></td><td>grid 区域阴影的垂直偏移。</td></tr><tr><td><code>height</code></td><td><code>number</code>&#x2F;<code>string</code></td><td>grid 区域的高度，可以是百分比或者像素值。</td></tr><tr><td><code>width</code></td><td><code>number</code>&#x2F;<code>string</code></td><td>grid 区域的宽度，可以是百分比或者像素值。</td></tr><tr><td><code>containLabel</code></td><td><code>boolean</code></td><td>是否使 grid 区域包含坐标轴标签，避免标签被截断。</td></tr><tr><td><code>opacity</code></td><td><code>number</code></td><td>grid 区域的透明度，取值范围 0~1。</td></tr></tbody></table><h3 id="多重网格"><a href="#多重网格" class="headerlink" title="多重网格"></a>多重网格</h3><img src="/2024/07/23/2024-07-23/%E5%9B%BE6.png" class title="图6"><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//在文章开头代码的基础上进行修改。</span><br><span class="hljs-keyword">const</span> option=&#123;<br>    <span class="hljs-attr">grid</span>:[<br>        &#123;<br>            <span class="hljs-attr">show</span>:<span class="hljs-literal">true</span>, <span class="hljs-comment">//初始化为false,</span><br>            <span class="hljs-attr">left</span>:<span class="hljs-string">&quot;5%&quot;</span>,<br>            <span class="hljs-attr">right</span>:<span class="hljs-string">&quot;5%&quot;</span>,<br>            <span class="hljs-attr">containLabel</span>:<span class="hljs-literal">true</span>, <span class="hljs-comment">//包含了轴标签</span><br>            <span class="hljs-attr">height</span>:<span class="hljs-string">&quot;35%&quot;</span>, <span class="hljs-comment">//网络高度</span><br>            <span class="hljs-comment">//设置网络样式，前提是show为true.</span><br>            <span class="hljs-attr">opacity</span>: <span class="hljs-number">0.7</span>, <span class="hljs-comment">//透明度</span><br>            <span class="hljs-attr">backgroundColor</span>:<span class="hljs-string">&quot;yellow&quot;</span>,<br>            <span class="hljs-attr">shadowBlur</span>: <span class="hljs-number">200</span>, <span class="hljs-comment">//阴影模糊程度</span><br>            <span class="hljs-attr">shadowColor</span>: <span class="hljs-string">&quot;yellow&quot;</span>,<br>            <span class="hljs-attr">shadomOffsetX</span>:<span class="hljs-number">0</span>, <span class="hljs-comment">//阴影偏移</span><br>            <span class="hljs-attr">shadomOffsetY</span>:<span class="hljs-number">0</span>,<br>        &#125;,<br>        &#123;<br>            <span class="hljs-comment">//网络二</span><br>            <span class="hljs-attr">show</span>:<span class="hljs-literal">false</span>,<br>            <span class="hljs-attr">left</span>:<span class="hljs-string">&quot;5%&quot;</span>,<br>            <span class="hljs-attr">right</span>:<span class="hljs-string">&quot;5%&quot;</span><br>            <span class="hljs-attr">containLabel</span>:<span class="hljs-literal">true</span>,<br>            <span class="hljs-attr">top</span>:<span class="hljs-string">&quot;50%&quot;</span>,<br>            <span class="hljs-attr">height</span>:<span class="hljs-string">&quot;35%&quot;</span><br>        &#125;<br>    ],<br>    <span class="hljs-comment">//XY轴</span><br>  <span class="hljs-attr">xAxis</span>:[&#123;<br>    <span class="hljs-attr">type</span>:<span class="hljs-string">&quot;category&quot;</span>,<br>    <span class="hljs-attr">data</span>:dataX,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">gridIndex</span>: <span class="hljs-number">1</span>, <span class="hljs-comment">//绑定网络二</span><br>    <span class="hljs-attr">type</span>:<span class="hljs-string">&quot;category&quot;</span>,<br>    <span class="hljs-attr">data</span>:dataX,<br>    <span class="hljs-attr">position</span>:<span class="hljs-string">&quot;top&quot;</span>,<br>  &#125;<br>  ],<br>  <span class="hljs-attr">yAxis</span>:[&#123;<br>    <span class="hljs-attr">type</span>:<span class="hljs-string">&quot;value&quot;</span>,<br>    <span class="hljs-attr">min</span>:<span class="hljs-number">0</span>,<br>    <span class="hljs-attr">max</span>:<span class="hljs-number">1</span>,<br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">type</span>:<span class="hljs-string">&quot;value&quot;</span>,<br>      <span class="hljs-attr">min</span>:<span class="hljs-number">0</span>,<br>      <span class="hljs-attr">max</span>:<span class="hljs-number">1</span>,<br>      <span class="hljs-attr">inverse</span>:<span class="hljs-literal">true</span>, <span class="hljs-comment">//坐标反转</span><br>      <span class="hljs-attr">gridIndex</span>:<span class="hljs-number">1</span>, <span class="hljs-comment">//绑定网络二</span><br>    &#125;<br>  ],<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="ECharts图表元素的位置调整"><a href="#ECharts图表元素的位置调整" class="headerlink" title="ECharts图表元素的位置调整"></a>ECharts图表元素的位置调整</h2><p>如<code>grid</code>的位置调整一样，<font color="yellow">ECharts大部分图表元素都是通过<code>top</code>，<code>bottom</code>，<code>left</code>，<code>right</code>四个配置项来调整组件元素在图表或者网络中的位置。</font>也就是元素上下左右的间距。</p><p>配置项的值类型有：</p><ul><li><code>number</code>：以像素为单位的绝对值。<code>top=20</code>即20px像素。</li><li><code>string</code>：父容器高度或者宽度的百分比。<code>top=&quot;20%&quot;</code>即相对于父容器宽度的20%大小。</li><li><code>auto</code>：自动计算位置，通常在响应式布局中使用。<code>top=&quot;auto&quot;</code>。</li><li><code>center</code>：将元素垂直居中（在某些配置中支持）。</li></ul><h2 id="ECharts-Label配置项"><a href="#ECharts-Label配置项" class="headerlink" title="ECharts Label配置项"></a>ECharts Label配置项</h2><p>ECharts很多元素都有是有标签或者说类似文本框属性，例如轴标签、legend标签、title标签，因此它们有很多通用的配置项。而在<code>series.label</code>和<code>axis.axisLabel</code>就有Label配置项，基本会涵盖所有的配置项。</p><p><font color="yellow">ECharts Label 配置项总结表</font></p><table><thead><tr><th>属性</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>show</code></td><td><code>boolean</code></td><td>是否显示标签。</td></tr><tr><td><code>position</code></td><td><code>string</code></td><td>标签的位置，支持 <code>top</code>、<code>left</code>、<code>right</code>、<code>bottom</code>、<code>inside</code>、<code>insideLeft</code>、<code>insideRight</code>、<code>insideTop</code>、<code>insideBottom</code>。<font color="yellow">在series中起作用</font>。</td></tr><tr><td><code>formatter</code></td><td><code>string</code>&#x2F;<code>Function</code></td><td>标签内容格式器，可以是字符串模板或者回调函数。</td></tr><tr><td><code>color</code></td><td><code>string</code></td><td>标签文字颜色。</td></tr><tr><td><code>fontStyle</code></td><td><code>string</code></td><td>标签文字风格，例如 <code>&#39;normal&#39;</code>、<code>&#39;italic&#39;</code>、<code>&#39;oblique&#39;</code>。</td></tr><tr><td><code>fontWeight</code></td><td><code>string</code></td><td>标签文字粗细，例如 <code>&#39;normal&#39;</code>、<code>&#39;bold&#39;</code>。</td></tr><tr><td><code>fontFamily</code></td><td><code>string</code></td><td>标签文字字体，例如 <code>&#39;sans-serif&#39;</code>、<code>&#39;serif&#39;</code>。</td></tr><tr><td><code>fontSize</code></td><td><code>number</code></td><td>标签文字大小。</td></tr><tr><td><code>lineHeight</code></td><td><code>number</code></td><td>标签文字行高。</td></tr><tr><td><code>backgroundColor</code></td><td><code>string</code></td><td>标签的背景颜色。</td></tr><tr><td><code>borderColor</code></td><td><code>string</code></td><td>标签的边框颜色。</td></tr><tr><td><code>borderWidth</code></td><td><code>number</code></td><td>标签的边框宽度。</td></tr><tr><td><code>borderRadius</code></td><td><code>number</code></td><td>标签的边框圆角。</td></tr><tr><td><code>padding</code></td><td><code>number</code>&#x2F;<code>Array</code></td><td>标签的内边距。</td></tr><tr><td><code>shadowColor</code></td><td><code>string</code></td><td>标签的阴影颜色。</td></tr><tr><td><code>shadowBlur</code></td><td><code>number</code></td><td>标签的阴影模糊度。</td></tr><tr><td><code>shadowOffsetX</code></td><td><code>number</code></td><td>标签阴影的水平偏移。</td></tr><tr><td><code>shadowOffsetY</code></td><td><code>number</code></td><td>标签阴影的垂直偏移。</td></tr></tbody></table><p>可以看到这些配置项几乎在<code>grid</code>中都存在，在后面我们会看到很多元素都具备这些配置项。</p><h2 id="ECharts-Legend配置项"><a href="#ECharts-Legend配置项" class="headerlink" title="ECharts Legend配置项"></a>ECharts Legend配置项</h2><p><font color="yellow">Legend 常用属性总结表：</font></p><table><thead><tr><th>属性</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>show</code></td><td><code>boolean</code></td><td>是否显示图例，默认为 <code>true</code>。</td></tr><tr><td><code>type</code></td><td><code>string</code></td><td>图例类型，可选 <code>&#39;plain&#39;</code>（普通图例）或 <code>&#39;scroll&#39;</code>（可滚动图例）。</td></tr><tr><td><code>data</code></td><td><code>Array</code></td><td>图例的数据项，可以是字符串数组或对象数组，每个字符串或对象代表一个系列。</td></tr><tr><td><code>selected</code></td><td><code>Object</code></td><td>图例选中状态，用于控制哪些系列被选中（显示）或未选中（隐藏）。</td></tr><tr><td><code>orient</code></td><td><code>string</code></td><td>图例的布局朝向，可选 <code>&#39;horizontal&#39;</code>（水平）或 <code>&#39;vertical&#39;</code>（垂直）。</td></tr><tr><td><code>left</code></td><td><code>string</code>&#x2F;<code>number</code></td><td>图例组件离容器左侧的距离，可以是具体的像素值或相对百分比。</td></tr><tr><td><code>right</code></td><td><code>string</code>&#x2F;<code>number</code></td><td>图例组件离容器右侧的距离，可以是具体的像素值或相对百分比。</td></tr><tr><td><code>top</code></td><td><code>string</code>&#x2F;<code>number</code></td><td>图例组件离容器上侧的距离，可以是具体的像素值或相对百分比。</td></tr><tr><td><code>bottom</code></td><td><code>string</code>&#x2F;<code>number</code></td><td>图例组件离容器下侧的距离，可以是具体的像素值或相对百分比。</td></tr><tr><td><code>align</code></td><td><code>string</code></td><td>图例标记和文本的对齐方式，可选 <code>&#39;auto&#39;</code>，<code>&#39;left&#39;</code>，<code>&#39;right&#39;</code>。</td></tr><tr><td><code>padding</code></td><td><code>number</code>&#x2F;<code>Array</code></td><td>图例的内边距，单位为像素。可以是单个值或数组（分别表示上、右、下、左的内边距）。</td></tr><tr><td><code>itemGap</code></td><td><code>number</code></td><td>图例项之间的间隔，单位为像素。</td></tr><tr><td><code>itemWidth</code></td><td><code>number</code></td><td>图例标记的宽度，单位为像素。</td></tr><tr><td><code>itemHeight</code></td><td><code>number</code></td><td>图例标记的高度，单位为像素。</td></tr><tr><td><code>textStyle</code></td><td><code>Object</code></td><td>图例文本的样式，包括颜色、字体、大小等。</td></tr><tr><td><code>backgroundColor</code></td><td><code>string</code></td><td>图例的背景颜色。</td></tr><tr><td><code>borderColor</code></td><td><code>string</code></td><td>图例的边框颜色。</td></tr><tr><td><code>borderWidth</code></td><td><code>number</code></td><td>图例的边框线宽。</td></tr><tr><td><code>borderRadius</code></td><td><code>number</code>&#x2F;<code>Array</code></td><td>图例的边框圆角，可以是单个值或数组（分别表示左上、右上、右下、左下的圆角半径）。</td></tr><tr><td><code>shadowBlur</code></td><td><code>number</code></td><td>图例的阴影模糊大小。</td></tr><tr><td><code>shadowColor</code></td><td><code>string</code></td><td>图例的阴影颜色。</td></tr><tr><td><code>shadowOffsetX</code></td><td><code>number</code></td><td>图例的阴影 X 偏移。</td></tr><tr><td><code>shadowOffsetY</code></td><td><code>number</code></td><td>图例的阴影 Y 偏移。</td></tr><tr><td><code>formatter</code></td><td><code>Function</code>&#x2F;<code>string</code></td><td>用于格式化图例文本，支持字符串模板和回调函数。</td></tr><tr><td><code>selectedMode</code></td><td><code>boolean</code>&#x2F;<code>string</code></td><td>图例选择的模式，默认为 <code>true</code>。可选 <code>&#39;single&#39;</code> 或 <code>&#39;multiple&#39;</code>。</td></tr><tr><td><code>inactiveColor</code></td><td><code>string</code></td><td>图例关闭时的颜色。</td></tr><tr><td><code>tooltip</code></td><td><code>Object</code></td><td>图例的 tooltip 配置项。</td></tr></tbody></table><p>大部分配置项和<code>grid</code>是相似的。</p><img src="/2024/07/23/2024-07-23/%E5%9B%BE7.png" class title="图7"><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//在文章开头代码的基础上进行修改。</span><br><span class="hljs-comment">//首先将数据系列复制至5份。</span><br><span class="hljs-keyword">const</span> option = &#123;<br>  <span class="hljs-comment">//图例</span><br>  <span class="hljs-attr">legend</span>:&#123;<br>    <span class="hljs-attr">backgroundColor</span>:<span class="hljs-string">&quot;grey&quot;</span>,<br>    <span class="hljs-attr">textStyle</span>:&#123;<br>      <span class="hljs-attr">fontSize</span>:<span class="hljs-number">20</span>,<br>      <span class="hljs-attr">color</span>:<span class="hljs-string">&quot;red&quot;</span>,<br>    &#125;,<br>    <br>    <span class="hljs-comment">//图例的配置项</span><br>    <span class="hljs-attr">orient</span>:<span class="hljs-string">&quot;horizontal&quot;</span>, <span class="hljs-comment">//水平或者垂直分布</span><br>    <span class="hljs-attr">padding</span>:<span class="hljs-number">10</span>,<br>    <span class="hljs-attr">type</span>:<span class="hljs-string">&quot;scroll&quot;</span>, <span class="hljs-comment">//滚动图例</span><br>    <span class="hljs-attr">left</span>:<span class="hljs-string">&quot;70%&quot;</span>,<br>    <span class="hljs-attr">align</span>:<span class="hljs-string">&quot;right&quot;</span>, <span class="hljs-comment">//对齐方式</span><br>    <span class="hljs-attr">itemWidth</span>:<span class="hljs-number">50</span>, <span class="hljs-comment">//图例标记的样式修改。</span><br>    <span class="hljs-attr">itemHeight</span>:<span class="hljs-number">30</span>,<br>    <span class="hljs-attr">selected</span>:&#123; <span class="hljs-comment">//初始化哪些系列被选中。 </span><br>      <span class="hljs-string">&quot;line1&quot;</span>:<span class="hljs-literal">true</span>,<br>      <span class="hljs-string">&quot;line2&quot;</span>:<span class="hljs-literal">false</span>,<br>      <span class="hljs-string">&quot;line3&quot;</span>:<span class="hljs-literal">false</span>,<br>      <span class="hljs-string">&quot;line4&quot;</span>:<span class="hljs-literal">true</span>,<br>      <span class="hljs-string">&quot;line5&quot;</span>:<span class="hljs-literal">false</span>,<br>    &#125;,<br>    <span class="hljs-attr">selectedMode</span>:<span class="hljs-string">&quot;single&quot;</span>, <span class="hljs-comment">//single表示最多只能有一个被选中。</span><br>    <span class="hljs-attr">tooltip</span>:&#123; <span class="hljs-comment">//图例小型的提示框</span><br>      <span class="hljs-attr">show</span>:<span class="hljs-literal">true</span>,<br>      <span class="hljs-attr">backgroundColor</span>:<span class="hljs-string">&quot;red&quot;</span>,<br>    &#125;<br>  &#125;,<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="ECharts-Tooltip配置项"><a href="#ECharts-Tooltip配置项" class="headerlink" title="ECharts Tooltip配置项"></a>ECharts Tooltip配置项</h2><p><font color="yellow">ECharts Tooltip 配置项总结表：</font></p><table><thead><tr><th>属性</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>show</code></td><td><code>boolean</code></td><td>是否显示 tooltip。</td></tr><tr><td><code>trigger</code></td><td><code>string</code></td><td>触发类型，支持 ‘item’（数据项触发）、’axis’（坐标轴触发）、’none’（不显示）。</td></tr><tr><td><code>triggerOn</code></td><td><code>string</code></td><td>触发条件，支持 ‘mousemove’（鼠标移动）、’click’（点击）、’mousemove</td></tr><tr><td><code>axisPointer</code></td><td><code>Object</code></td><td>坐标轴指示器配置项。</td></tr><tr><td><code>formatter</code></td><td><code>string</code>&#x2F;<code>Function</code></td><td>提示框内容格式器。可以是字符串模板或者回调函数。</td></tr><tr><td><code>backgroundColor</code></td><td><code>string</code>&#x2F;<code>Object</code></td><td>提示框的背景颜色。</td></tr><tr><td><code>borderColor</code></td><td><code>string</code></td><td>提示框的边框颜色。</td></tr><tr><td><code>borderWidth</code></td><td><code>number</code></td><td>提示框的边框宽度。</td></tr><tr><td><code>padding</code></td><td><code>number</code>&#x2F;<code>Array</code></td><td>提示框的内边距。</td></tr><tr><td><code>textStyle</code></td><td><code>Object</code></td><td>提示框的文字样式配置项，包括颜色、字体大小、字体粗细等。</td></tr><tr><td><code>extraCssText</code></td><td><code>string</code></td><td>自定义的 CSS 样式，支持全局 CSS 属性。</td></tr><tr><td><code>transitionDuration</code></td><td><code>number</code></td><td>动画过渡时间，单位为秒。</td></tr><tr><td><code>confine</code></td><td><code>boolean</code></td><td>是否将提示框限制在图表区域内。</td></tr><tr><td><code>enterable</code></td><td><code>boolean</code></td><td>是否允许鼠标进入 tooltip 区域。</td></tr><tr><td><code>showContent</code></td><td><code>boolean</code></td><td>是否显示 tooltip 内容。</td></tr></tbody></table><p>根据<a href="https://cxdlogver.github.io/2024/07/22/2024-07-22/"><strong>ECharts使用（1)</strong></a>中的第一个例子，我们只要理解<code>tooltip</code>提示框和<code>axisPointer</code>轴标签指示器在图表中位置，就很好理解配置项的内容。</p><p><code>tooltip</code>是一个指示框，用于显示坐标轴某一个点的坐标信息。根据<code>trigger</code>有两种触发模式。</p><ul><li><code>item</code>数据项触发：当鼠标指到数据系列的数据项时，才出现提示框，并给出数据点信息。</li><li><code>axis</code>坐标轴触发：当鼠标指在坐标轴的任意一个位置时，都会出现提示框，给出与鼠标当前位置最近的所有数据项信息。</li></ul><p><code>triggerOn</code>触发条件，<code>click</code>表示只有点击时才出现提示框，<code>mousemove</code>鼠标移到时就出现提示框。默认是<code>mousemove</code>。</p><p><code>tooltip</code>是一个文本框，因此相关的渲染以及<code>textStyle</code>配置都有，用于样式的配置。</p><p><code>axisPointer</code>是呈现在坐标轴上的轴标签指示器，声明它则<code>tooltip</code>默认<code>trigger:axis</code>。它作为标签，有<code>label</code>配置，在<code>label</code>中有标签的相关的渲染以及<code>textStyle</code>配置，和legend等元素类似。因此渲染不再做介绍。</p><p><code>axisPointer</code>的触发类型<code>type</code>有三种：</p><ul><li><code>line</code>：只有一条垂直于X轴的线。</li><li><code>cross</code>：有两条相互垂直的线。</li><li><code>shadow</code>:用一块阴影矩形代替垂直于X轴的线。</li></ul><img src="/2024/07/23/2024-07-23/%E5%9B%BE8.png" class title="图8"><p><font color="yellow">对应的有<code>crossStyle</code>、<code>lineStyle</code>、<code>shadowStyle</code>配置项进行渲染。</font></p>]]></content>
    
    
    <categories>
      
      <category>前后端学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>每日总结</tag>
      
      <tag>EChars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前端学习-ECharts使用（1）</title>
    <link href="/2024/07/22/2024-07-22/"/>
    <url>/2024/07/22/2024-07-22/</url>
    
    <content type="html"><![CDATA[<p>文章介绍ECharts图表构建的一个基本结构；Option的配置项汇总和常用的配置项用法；图表的基础样式配置；Option更新方式。</p><span id="more"></span><h1 id="前端学习-ECharts使用（1）"><a href="#前端学习-ECharts使用（1）" class="headerlink" title="前端学习-ECharts使用（1）"></a>前端学习-ECharts使用（1）</h1><blockquote><p>个人学习总结，可能存在错误。</p></blockquote><hr><p>学习和使用ECharts，我们直接通过学习官网的**<font color="#008B8B">示例代码</font>**，结合<font color="#008B8B"><strong>API文档</strong></font>，通过分析和修改示例代码，实时观察图表样式来熟悉ECharts的配置项使用。</p><blockquote><p><a href="https://echarts.apache.org/zh/index.html"><strong><u>ECharts官网</u></strong></a></p></blockquote><p>通常我们直接在官网编辑<a href="https://echarts.apache.org/examples/zh/editor.html?c=line-simple%EF%BC%8C%E5%BE%97%E5%88%B0%E6%88%91%E4%BB%AC%E9%9C%80%E8%A6%81%E7%9A%84%E6%95%88%E6%9E%9C%E4%BB%A5%E5%90%8E%E5%9C%A8%E5%A4%8D%E5%88%B6%E5%88%B0%E6%88%91%E4%BB%AC%E7%9A%84%E7%A8%8B%E5%BA%8F%E4%B8%AD%E3%80%82">https://echarts.apache.org/examples/zh/editor.html?c=line-simple，得到我们需要的效果以后在复制到我们的程序中。</a></p><h2 id="ECharts基本结构"><a href="#ECharts基本结构" class="headerlink" title="ECharts基本结构"></a>ECharts基本结构</h2><p>npm安装echarts依赖</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">npm install echarts<br></code></pre></td></tr></table></figure><p><strong>基本结构如下：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span> //声明容器<br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> echarts <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;echarts&#x27;</span>;</span><br><span class="language-javascript">    <span class="hljs-keyword">let</span> myCharts = <span class="hljs-keyword">new</span> echarts.<span class="hljs-title function_">init</span>(<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;main&#x27;</span>)); <span class="hljs-comment">//初始化图表到容器中</span></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> option = &#123;</span><br><span class="language-javascript">        <span class="hljs-comment">//定义配置项，包括横坐标，纵坐标，数据集，图例等等</span></span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">    myCharts.<span class="hljs-title function_">setOption</span>(option) <span class="hljs-comment">//引入配置项。</span></span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p><font color="yellow">由此可见，ECharts的所有学习几乎都放在option配置项的设置。</font></p><h2 id="ECharts-Option-常用配置项表"><a href="#ECharts-Option-常用配置项表" class="headerlink" title="ECharts Option 常用配置项表"></a>ECharts Option 常用配置项表</h2><table><thead><tr><th>属性</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>title</code></td><td><code>Object</code></td><td>图表标题配置项，包括主标题和副标题。</td></tr><tr><td><code>legend</code></td><td><code>Object</code>&#x2F;<code>Array</code></td><td>图例组件配置项，用于展示不同系列的标识。</td></tr><tr><td><code>tooltip</code></td><td><code>Object</code></td><td>提示框组件配置项。</td></tr><tr><td><code>grid</code></td><td><code>Object</code>&#x2F;<code>Array</code></td><td>直角坐标系内绘图网格配置项。</td></tr><tr><td><code>xAxis</code></td><td><code>Object</code>&#x2F;<code>Array</code></td><td>X 轴配置项，可以是单个对象或对象数组，数组用于多 X 轴场景。</td></tr><tr><td><code>yAxis</code></td><td><code>Object</code>&#x2F;<code>Array</code></td><td>Y 轴配置项，可以是单个对象或对象数组，数组用于多 Y 轴场景。</td></tr><tr><td><code>polar</code></td><td><code>Object</code></td><td>极坐标系配置项。</td></tr><tr><td><code>radiusAxis</code></td><td><code>Object</code></td><td>半径轴配置项，适用于极坐标系。</td></tr><tr><td><code>angleAxis</code></td><td><code>Object</code></td><td>角度轴配置项，适用于极坐标系。</td></tr><tr><td><code>radar</code></td><td><code>Object</code></td><td>雷达图坐标系配置项。</td></tr><tr><td><code>dataZoom</code></td><td><code>Object</code>&#x2F;<code>Array</code></td><td>数据区域缩放组件配置项。</td></tr><tr><td><code>visualMap</code></td><td><code>Object</code>&#x2F;<code>Array</code></td><td>视觉映射组件配置项，用于进行数据映射。</td></tr><tr><td><code>series</code></td><td><code>Array</code></td><td>系列列表，每个系列通过配置项表示数据和图表类型。</td></tr><tr><td><code>color</code></td><td><code>Array</code></td><td>调色盘颜色列表。</td></tr><tr><td><code>backgroundColor</code></td><td><code>string</code></td><td>图表的背景色。</td></tr><tr><td><code>textStyle</code></td><td><code>Object</code></td><td>全局字体样式配置项。</td></tr><tr><td><code>animation</code></td><td><code>boolean</code></td><td>是否开启动画。</td></tr><tr><td><code>animationDuration</code></td><td><code>number</code></td><td>初始动画时长。</td></tr><tr><td><code>animationEasing</code></td><td><code>string</code></td><td>初始动画缓动效果。</td></tr><tr><td><code>animationDelay</code></td><td><code>number</code>&#x2F;<code>Function</code></td><td>初始动画延迟。</td></tr><tr><td><code>toolbox</code></td><td><code>Object</code></td><td>工具栏配置项，包括数据视图、还原、保存图片等功能。</td></tr><tr><td><code>geo</code></td><td><code>Object</code></td><td>地理坐标系组件配置项。</td></tr><tr><td><code>parallel</code></td><td><code>Object</code></td><td>平行坐标系组件配置项。</td></tr><tr><td><code>parallelAxis</code></td><td><code>Object</code></td><td>平行坐标系的坐标轴配置项。</td></tr><tr><td><code>calendar</code></td><td><code>Object</code></td><td>日历坐标系配置项。</td></tr><tr><td><code>dataset</code></td><td><code>Object</code>&#x2F;<code>Array</code></td><td>数据集配置项。</td></tr><tr><td><code>graphic</code></td><td><code>Object</code>&#x2F;<code>Array</code></td><td>图形元素配置项。</td></tr><tr><td><code>brush</code></td><td><code>Object</code></td><td>刷子组件配置项，用于区域选择。</td></tr><tr><td><code>aria</code></td><td><code>Object</code></td><td>无障碍访问配置项。</td></tr></tbody></table><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> dataY1 = []<br><span class="hljs-keyword">let</span> dataY2 = []<br><span class="hljs-keyword">let</span> dataX1 = []<br><span class="hljs-keyword">let</span> dataX2 = []<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>; i&lt;<span class="hljs-number">50</span>; i++)&#123;<br>  dataY1.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>())<br>  dataY2.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>())<br>  dataX1.<span class="hljs-title function_">push</span>((i+<span class="hljs-number">1</span>).<span class="hljs-title function_">toString</span>())<br>  dataX2.<span class="hljs-title function_">push</span>(<span class="hljs-number">100</span>+i)<br>&#125;<br><br><span class="hljs-keyword">const</span> option = &#123;<br>    <span class="hljs-comment">//全局配置</span><br>  <span class="hljs-attr">textStyle</span>:&#123;<br>    <span class="hljs-attr">fontFamily</span>:<span class="hljs-string">&quot;华文中宋&quot;</span>, <span class="hljs-comment">//全局字体样式</span><br>    <span class="hljs-attr">color</span>:<span class="hljs-string">&quot;white&quot;</span>, <span class="hljs-comment">//全局颜色配置</span><br>  &#125;<br>    <br>    <span class="hljs-comment">//标题框</span><br>    <span class="hljs-attr">title</span>:&#123; <br>        <span class="hljs-attr">text</span>:<span class="hljs-string">&#x27;Chart&#x27;</span>, <span class="hljs-comment">//主标题</span><br>        <span class="hljs-attr">subtext</span>: <span class="hljs-string">&#x27;-- by Xiang&#x27;</span>, <span class="hljs-comment">//副标题</span><br>        <span class="hljs-attr">textStyle</span>:&#123; <span class="hljs-comment">// 主标题框样式</span><br>            <span class="hljs-attr">color</span>:<span class="hljs-string">&quot;yellow&quot;</span>, <span class="hljs-comment">//前景颜色</span><br>        &#125;,<br>        <span class="hljs-attr">subtextStyle</span>:&#123; <span class="hljs-comment">//副标题框样式</span><br>        <span class="hljs-attr">color</span>:<span class="hljs-string">&quot;aqua&quot;</span>,<br>    &#125;,<br>        <span class="hljs-attr">backgroundColor</span>: <span class="hljs-string">&#x27;grey&#x27;</span>, <span class="hljs-comment">//标题框背景色</span><br>        <span class="hljs-attr">borderWidth</span>: <span class="hljs-string">&#x27;2&#x27;</span>, <span class="hljs-comment">//边框大小</span><br>    &#125;,<br>     <br>    <span class="hljs-comment">//横坐标</span><br>  <span class="hljs-attr">xAxis</span>:[<br>    <span class="hljs-comment">//横坐标1</span><br>    &#123;<br>      <span class="hljs-attr">type</span>:<span class="hljs-string">&quot;category&quot;</span>, <span class="hljs-comment">//坐标标签类型为类别</span><br>      <span class="hljs-attr">data</span>:dataX, <span class="hljs-comment">//标签类别数据</span><br>            <span class="hljs-attr">axisLabel</span>:&#123;<br>        <span class="hljs-attr">textStyle</span>:&#123;<br>          <span class="hljs-attr">fontFamily</span>:<span class="hljs-string">&quot;华文中宋&quot;</span>,<br>        &#125;<br>      &#125;<br>    &#125;,<br>    <span class="hljs-comment">//横坐标2</span><br>    &#123;<br>      <span class="hljs-attr">type</span>:<span class="hljs-string">&quot;value&quot;</span>, <span class="hljs-comment">//标签类型为数值</span><br>      <span class="hljs-attr">data</span>:dataX2<br>    &#125;,<br>  ],<br> <br>  <span class="hljs-comment">//纵坐标</span><br>  <span class="hljs-attr">yAxis</span>:[<br>    <span class="hljs-comment">//纵坐标1</span><br>    &#123;<br>      <span class="hljs-attr">type</span>:<span class="hljs-string">&quot;value&quot;</span>,<br>      <span class="hljs-attr">data</span>:dataY1,<br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">type</span>:<span class="hljs-string">&quot;value&quot;</span>,<br>      <span class="hljs-attr">data</span>:dataY2,<br>    &#125;<br>  ]<br>    <br>    <span class="hljs-comment">//数据系列</span><br>  <span class="hljs-attr">series</span>:[<br>    &#123;<br>    <span class="hljs-attr">name</span>:<span class="hljs-string">&quot;line&quot;</span>,<br>      <span class="hljs-attr">type</span>:<span class="hljs-string">&quot;line&quot;</span>, <span class="hljs-comment">//折线图</span><br>      <span class="hljs-attr">data</span>:dataY1, <span class="hljs-comment">//数据系列</span><br>      <span class="hljs-attr">xAxisIndex</span>:<span class="hljs-number">0</span>, <span class="hljs-comment">//选择第0个x数据轴</span><br>      <span class="hljs-attr">yAxisIndex</span>:<span class="hljs-number">0</span>, <span class="hljs-comment">//选择第0个y数据轴</span><br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">name</span>:<span class="hljs-string">&quot;bar&quot;</span>,<br>      <span class="hljs-attr">type</span>:<span class="hljs-string">&quot;bar&quot;</span>, <span class="hljs-comment">//柱形图</span><br>      <span class="hljs-attr">data</span>:dataY2, <span class="hljs-comment">//数据系列</span><br>      <span class="hljs-attr">xAxisIndex</span>:<span class="hljs-number">1</span>, <span class="hljs-comment">//选择第1个x数据轴</span><br>      <span class="hljs-attr">yAxisIndex</span>:<span class="hljs-number">1</span>, <span class="hljs-comment">//选择第1个y数据轴</span><br>    &#125;<br>  ],<br>  <br>  <span class="hljs-comment">//提示框</span><br>  <span class="hljs-attr">tooltip</span>:&#123;<br>    <span class="hljs-attr">trigger</span>:<span class="hljs-string">&quot;axis&quot;</span>, <span class="hljs-comment">//坐标轴每个点都显示提示框</span><br>    <span class="hljs-attr">backgroundColor</span>:<span class="hljs-string">&quot;white&quot;</span>, <span class="hljs-comment">//提示框背景色</span><br>    <span class="hljs-attr">borderWidth</span>:<span class="hljs-string">&quot;2&quot;</span>, <span class="hljs-comment">//边框宽度</span><br>    <span class="hljs-attr">borderColor</span>:<span class="hljs-string">&quot;yellow&quot;</span>, <span class="hljs-comment">//边框颜色</span><br>    <span class="hljs-attr">textStyle</span>:&#123;<br>      <span class="hljs-attr">color</span>:<span class="hljs-string">&quot;red&quot;</span>,<br>    &#125;,<br>    <span class="hljs-attr">axisPointer</span>:&#123; <span class="hljs-comment">//坐标轴指示器</span><br>      <span class="hljs-attr">type</span>:<span class="hljs-string">&quot;cross&quot;</span>, <span class="hljs-comment">//显示方式，两条线交叉</span><br>      <span class="hljs-attr">label</span>:&#123;<br>        <span class="hljs-attr">textStyle</span>:&#123;<br>          <span class="hljs-attr">color</span>:<span class="hljs-string">&quot;red&quot;</span>,<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;,<br>  <br>  <span class="hljs-comment">//图例框</span><br>  <span class="hljs-attr">legend</span>:&#123;<br>    <span class="hljs-attr">show</span>:<span class="hljs-literal">true</span>, <span class="hljs-comment">//默认为显示</span><br>    <span class="hljs-attr">data</span>:[<span class="hljs-string">&quot;line&quot;</span>,<span class="hljs-string">&quot;bar&quot;</span>], <span class="hljs-comment">//默认所有系列都显示</span><br>    <span class="hljs-attr">backgroundColor</span>:<span class="hljs-string">&quot;grey&quot;</span>,<br>    <span class="hljs-attr">textStyle</span>:&#123;<br>      <span class="hljs-attr">color</span>:<span class="hljs-string">&quot;yellow&quot;</span>,<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>图表效果如下：</p><img src="/2024/07/22/2024-07-22/%E5%9B%BE%E8%A1%A8%E7%A4%BA%E4%BE%8B.png" class title="图表示例"><p><font color="yellow">通常纵坐标类型为<code>value</code>，即具体的值。而横坐标用<code>category</code>类型</font>，横坐标不指定则默认是<code>[1,2,3,……]</code>。如果横坐标用<code>value</code>，只能在series中通过二维数值的形式传递<code>[[x1,y1],[x2,y2]]</code>。如果是一维数值则默认为<code>[[x1,x1],[x2,x2]]</code>。</p><h2 id="ECharts中的样式配置"><a href="#ECharts中的样式配置" class="headerlink" title="ECharts中的样式配置"></a>ECharts中的样式配置</h2><p>任何设计都会包括背景颜色、前景颜色、字体大小等样式的配置。在ECharts中，样式配置主要在以下几个地方。</p><ol><li><font color="yellow">直接在组件下配置</font>：例如option的全局配置、tooltip提示框下的<code>backgroundColor</code>配置等。</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> option = &#123;<br>    <span class="hljs-attr">backgroundColor</span>:<span class="hljs-string">&quot;red&quot;</span>,<br>    <span class="hljs-attr">borderColor</span>:<span class="hljs-string">&quot;white&quot;</span>,<br>    <span class="hljs-attr">tooltip</span>:&#123;<br>        <span class="hljs-attr">backgroundColor</span>:<span class="hljs-string">&quot;red&quot;</span>,<br>        <span class="hljs-attr">borderWidth</span>:<span class="hljs-number">2</span>，<br>        <span class="hljs-attr">borderCOlor</span>:<span class="hljs-string">&quot;white&quot;</span>,<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ol start="2"><li><font color="yellow">在<code>textStyle</code>下配置</font>：如果组件中可以有文本，通常会有<code>textStyle</code>配置项，如option全局配置、legend、xAxis中的axisLabel以及tooltip中的axisPointer等。</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">xAxis</span>:[<br>  &#123;<br>     <span class="hljs-attr">type</span>:<span class="hljs-string">&quot;category&quot;</span>, <br>     <span class="hljs-attr">data</span>:dataX, <br>         <span class="hljs-attr">axisLabel</span>:&#123;<br>        <span class="hljs-attr">textStyle</span>:&#123;<br>          <span class="hljs-attr">fontFamily</span>:<span class="hljs-string">&quot;华文中宋&quot;</span>,<br>        &#125;<br>      &#125;<br>  &#125;<br>]<br></code></pre></td></tr></table></figure><ol start="3"><li><font color="yellow">在特定Style配置下</font>：如果组件不是文本框一类的。通常会有对应的配置项。例如：<ul><li><code>subtext</code>有<code>subtextStyle</code>配置项。</li><li><code>serise</code>中折线图有<code>lineStyle</code>配置项，数据点有<code>itemStyle</code>数据项，面积图有<code>areaStyle</code>数据项。</li></ul></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">series</span>:[ <span class="hljs-comment">//修改上述的折线图配置</span><br>    &#123;<br>      <span class="hljs-attr">name</span>:<span class="hljs-string">&quot;line&quot;</span>,<br>      <span class="hljs-attr">type</span>:<span class="hljs-string">&quot;line&quot;</span>, <span class="hljs-comment">//折线图</span><br>      <span class="hljs-attr">data</span>:dataY1, <span class="hljs-comment">//数据系列</span><br>      <span class="hljs-attr">xAxisIndex</span>:<span class="hljs-number">0</span>, <span class="hljs-comment">//选择第0个x数据轴</span><br>      <span class="hljs-attr">yAxisIndex</span>:<span class="hljs-number">0</span>, <span class="hljs-comment">//选择第0个y数据轴</span><br>      <span class="hljs-attr">areaStyle</span>:&#123;<br>        <span class="hljs-attr">color</span>:<span class="hljs-string">&quot;green&quot;</span> <br>      &#125;,<br>      <span class="hljs-attr">lineStyle</span>:&#123;<br>        <span class="hljs-attr">color</span>:<span class="hljs-string">&quot;red&quot;</span><br>      &#125;,<br>      <span class="hljs-attr">itemStyle</span>:&#123;<br>        <span class="hljs-attr">color</span>:<span class="hljs-string">&quot;yellow&quot;</span><br>      &#125;<br>]<br></code></pre></td></tr></table></figure><p>得到的效果图如下：</p><img src="/2024/07/22/2024-07-22/%E5%9B%BE2.png" class title="图2"><h2 id="ECharts-Option更新"><a href="#ECharts-Option更新" class="headerlink" title="ECharts Option更新"></a>ECharts Option更新</h2><p>在 ECharts 中，更新图表时只需要更新option配置项，然后引入到ECharts中，不过在ECharts中不需要重新传入所有的 option 配置项，只需传入需要修改的部分配置即可。这是<font color="yellow">因为 setOption 方法默认会进行合并操作（merge），即只更新传入的配置项，而保持其他配置项不变</font>。</p><p>我们通过<font color="yellow">JS中的<code>setInterval()</code>函数</font>设置一个定时器，定时更新图表。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">const</span> id = <span class="hljs-built_in">setInterval</span>( <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>  dataX1.<span class="hljs-title function_">push</span>((count+<span class="hljs-number">20</span>).<span class="hljs-title function_">toString</span>())<br>  dataX2.<span class="hljs-title function_">push</span>((count+<span class="hljs-number">120</span>).<span class="hljs-title function_">toString</span>())<br>  dataY1.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>());<br>  dataY2.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>()); <span class="hljs-comment">//每一秒更新数据系列，队尾加入新的数据，队首去掉一个数据</span><br>  <span class="hljs-keyword">if</span>(++count&gt;<span class="hljs-number">20</span>)&#123;<br>    <span class="hljs-title function_">cleanInterval</span>(id)<br>  &#125;<br>  myChart.<span class="hljs-title function_">setOption</span>(&#123; <span class="hljs-comment">//只需要将更新的数据传进去。</span><br>      <span class="hljs-attr">xAxis</span>:[<br>        &#123;<span class="hljs-attr">data</span>:dataX1&#125;,<br>        &#123;<span class="hljs-attr">data</span>:dataX2&#125;<br>        ],<br>    <span class="hljs-attr">series</span>:[<br>        &#123;<br>          <span class="hljs-attr">data</span>:dataY1,<br>        &#125;,<br>        &#123;<br>          <span class="hljs-attr">data</span>:dataY2,<br>        &#125;<br>      ]<br>  &#125;);<br>&#125;, <span class="hljs-number">1000</span>);<br></code></pre></td></tr></table></figure><p>动图效果如下：</p><img src="/2024/07/22/2024-07-22/%E5%9B%BE3.gif" class title="图3"><p>完整代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> dataY1 = []<br><span class="hljs-keyword">let</span> dataY2 = []<br><span class="hljs-keyword">let</span> dataX1 = []<br><span class="hljs-keyword">let</span> dataX2 = []<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>; i&lt;<span class="hljs-number">20</span>; i++)&#123;<br>  dataY1.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>())<br>  dataY2.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>())<br>  dataX1.<span class="hljs-title function_">push</span>((i+<span class="hljs-number">1</span>).<span class="hljs-title function_">toString</span>())<br>  dataX2.<span class="hljs-title function_">push</span>((<span class="hljs-number">100</span>+i).<span class="hljs-title function_">toString</span>())<br>&#125;<br><br>option = &#123;<br>  <span class="hljs-comment">//标题框</span><br>  title :&#123;<br>    <span class="hljs-attr">text</span>:<span class="hljs-string">&quot;Chart&quot;</span>,<br>    <span class="hljs-attr">subtext</span>:<span class="hljs-string">&quot;-- by xiang&quot;</span>,<br>    textStyle : &#123;<br>      color : <span class="hljs-string">&#x27;yellow&#x27;</span>,<br>    &#125;,<br>    <span class="hljs-attr">subtextStyle</span>:&#123;<br>      color : <span class="hljs-string">&#x27;aqua&#x27;</span>,<br>    &#125;,<br>    <span class="hljs-attr">backgroundColor</span>: <span class="hljs-string">&quot;grey&quot;</span>,<br>    <span class="hljs-attr">borderWidth</span>:<span class="hljs-string">&quot;2&quot;</span>,<br>  &#125;,<br>  <br>  <span class="hljs-comment">//横坐标</span><br>  <span class="hljs-attr">xAxis</span>:[<br>    <span class="hljs-comment">//横坐标1</span><br>    &#123;<br>      <span class="hljs-attr">type</span>:<span class="hljs-string">&quot;category&quot;</span>, <span class="hljs-comment">//坐标标签类型为类别</span><br>      <span class="hljs-attr">data</span>:dataX1, <span class="hljs-comment">//标签类别数据</span><br>    &#125;,<br>    <span class="hljs-comment">//横坐标2</span><br>    &#123;<br>      <span class="hljs-attr">type</span>:<span class="hljs-string">&quot;category&quot;</span>, <span class="hljs-comment">//标签类型为数值</span><br>      <span class="hljs-attr">data</span>:dataX2,<br>    &#125;,<br>  ],<br>  <br>  <span class="hljs-comment">//纵坐标</span><br>  <span class="hljs-attr">yAxis</span>:[<br>    <span class="hljs-comment">//纵坐标1</span><br>    &#123;<br>      <span class="hljs-attr">type</span>:<span class="hljs-string">&quot;value&quot;</span>,<br>      <span class="hljs-attr">data</span>:dataY1,<br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">type</span>:<span class="hljs-string">&quot;value&quot;</span>,<br>      <span class="hljs-attr">data</span>:dataY2,<br>    &#125;<br>  ],<br>  <br>  <span class="hljs-comment">//数据系列</span><br>  <span class="hljs-attr">series</span>:[<br>    &#123;<br>      <span class="hljs-attr">name</span>:<span class="hljs-string">&quot;line&quot;</span>,<br>      <span class="hljs-attr">type</span>:<span class="hljs-string">&quot;line&quot;</span>, <span class="hljs-comment">//折线图</span><br>      <span class="hljs-attr">data</span>:dataY1, <span class="hljs-comment">//数据系列</span><br>      <span class="hljs-attr">xAxisIndex</span>:<span class="hljs-number">0</span>, <span class="hljs-comment">//选择第0个x数据轴</span><br>      <span class="hljs-attr">yAxisIndex</span>:<span class="hljs-number">0</span>, <span class="hljs-comment">//选择第0个y数据轴</span><br>      <span class="hljs-comment">// areaStyle:&#123;</span><br>      <span class="hljs-comment">//   color:&quot;green&quot;</span><br>      <span class="hljs-comment">// &#125;,</span><br>      <span class="hljs-comment">// lineStyle:&#123;</span><br>      <span class="hljs-comment">//   color:&quot;red&quot;</span><br>      <span class="hljs-comment">// &#125;,</span><br>      <span class="hljs-comment">// itemStyle:&#123;</span><br>      <span class="hljs-comment">//   color:&quot;yellow&quot;</span><br>      <span class="hljs-comment">// &#125;</span><br>      <br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">name</span>:<span class="hljs-string">&quot;bar&quot;</span>,<br>      <span class="hljs-attr">type</span>:<span class="hljs-string">&quot;bar&quot;</span>, <span class="hljs-comment">//柱形图</span><br>      <span class="hljs-attr">data</span>:dataY2, <span class="hljs-comment">//数据系列</span><br>      <span class="hljs-attr">xAxisIndex</span>:<span class="hljs-number">1</span>, <span class="hljs-comment">//选择第1个x数据轴</span><br>      <span class="hljs-attr">yAxisIndex</span>:<span class="hljs-number">1</span>, <span class="hljs-comment">//选择第1个y数据轴</span><br>      <span class="hljs-attr">show</span>:<span class="hljs-literal">false</span>,<br>    &#125;<br>  ],<br>  <br>  <span class="hljs-comment">//提示框</span><br>  <span class="hljs-attr">tooltip</span>:&#123;<br>    <span class="hljs-attr">trigger</span>:<span class="hljs-string">&quot;axis&quot;</span>, <span class="hljs-comment">//坐标轴每个点都显示提示框</span><br>    <span class="hljs-attr">backgroundColor</span>:<span class="hljs-string">&quot;white&quot;</span>, <span class="hljs-comment">//提示框背景色</span><br>    <span class="hljs-attr">borderWidth</span>:<span class="hljs-string">&quot;2&quot;</span>, <span class="hljs-comment">//边框宽度</span><br>    <span class="hljs-attr">borderColor</span>:<span class="hljs-string">&quot;yellow&quot;</span>, <span class="hljs-comment">//边框颜色</span><br>    <span class="hljs-attr">textStyle</span>:&#123;<br>      <span class="hljs-attr">color</span>:<span class="hljs-string">&quot;red&quot;</span>,<br>    &#125;,<br>    <span class="hljs-attr">axisPointer</span>:&#123; <span class="hljs-comment">//坐标轴指示器</span><br>      <span class="hljs-attr">type</span>:<span class="hljs-string">&quot;cross&quot;</span>, <span class="hljs-comment">//显示方式，两条线交叉</span><br>      <span class="hljs-attr">label</span>:&#123;<br>        <span class="hljs-attr">textStyle</span>:&#123;<br>          <span class="hljs-attr">color</span>:<span class="hljs-string">&quot;red&quot;</span>,<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;,<br>  <br>  <span class="hljs-comment">//图例框</span><br>  <span class="hljs-attr">legend</span>:&#123;<br>    <span class="hljs-attr">show</span>:<span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">data</span>:[<span class="hljs-string">&quot;line&quot;</span>,<span class="hljs-string">&quot;bar&quot;</span>],<br>    <span class="hljs-attr">backgroundColor</span>:<span class="hljs-string">&quot;grey&quot;</span>,<br>    <span class="hljs-attr">textStyle</span>:&#123;<br>      <span class="hljs-attr">color</span>:<span class="hljs-string">&quot;yellow&quot;</span>,<br>    &#125;<br>  &#125;,<br>  <br>  <span class="hljs-comment">//全局配置</span><br>  <span class="hljs-attr">textStyle</span>:&#123;<br>    <span class="hljs-attr">fontFamily</span>:<span class="hljs-string">&quot;华文中宋&quot;</span>,<br>    <span class="hljs-attr">color</span>:<span class="hljs-string">&quot;white&quot;</span>,<br>  &#125;<br>&#125;;<br><br><span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">const</span> id = <span class="hljs-built_in">setInterval</span>( <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>  <br>  dataX1.<span class="hljs-title function_">push</span>((count+<span class="hljs-number">20</span>).<span class="hljs-title function_">toString</span>())<br>  dataX2.<span class="hljs-title function_">push</span>((count+<span class="hljs-number">120</span>).<span class="hljs-title function_">toString</span>())<br>  dataY1.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>());<br>  dataY2.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>());<br>  <span class="hljs-keyword">if</span>(++count&gt;<span class="hljs-number">20</span>)&#123;<br>    <span class="hljs-title function_">cleanInterval</span>(id)<br>  &#125;<br>  myChart.<span class="hljs-title function_">setOption</span>(&#123;<br>          <span class="hljs-attr">xAxis</span>:[<br>        &#123;<span class="hljs-attr">data</span>:dataX1&#125;,<br>        &#123;<span class="hljs-attr">data</span>:dataX2&#125;<br>        ],<br>    <span class="hljs-attr">series</span>:[<br>        &#123;<br>          <span class="hljs-attr">data</span>:dataY1,<br>        &#125;,<br>        &#123;<br>          <span class="hljs-attr">data</span>:dataY2,<br>        &#125;<br>      ]<br>  &#125;);<br>&#125;, <span class="hljs-number">1000</span>);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前后端学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>每日总结</tag>
      
      <tag>EChars</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
